{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass WholeSite extends React.Component {\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"spotifyLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(SpotifyLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"playlistBuilder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(PlaylistBuilder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }))) //<SpotifyLogin />\n    ;\n  }\n\n}\n\nclass PlaylistBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainArtistTracks: [],\n      mainArtistSimilarArtists: [],\n      currentMainArtist: {},\n      mainArtistData: {},\n      spiderLeg: [{\n        \"left\": \"10%\",\n        \"top\": \"10%\",\n        \"artistName\": null,\n        \"artistID\": null\n      }]\n    };\n    this.mainArtistChange = this.mainArtistChange.bind(this);\n    this.mainArtistSubmit = this.mainArtistSubmit.bind(this);\n    this.searchAPI = this.searchAPI.bind(this);\n    this.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\n    this.artistSimilarArtistsAPI = this.artistSimilarArtistsAPI.bind(this);\n    this.artistGetAllData = this.artistGetAllData.bind(this);\n    this.processArtistData = this.processArtistData.bind(this);\n  }\n\n  mainArtistChange(mainArtistVal) {\n    this.setState({\n      mainArtist: mainArtistVal\n    });\n  }\n\n  mainArtistSubmit(mainArtistVal) {\n    this.searchAPI(this.state.mainArtist);\n  }\n\n  searchAPI(searchTerm) {\n    fetch(\"https://api.spotify.com/v1/search?q=\" + encodeURIComponent(searchTerm) + \"&type=artist&limit=5\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.processArtistData(response, 0);\n    });\n  }\n\n  artistSimilarArtistsAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/related-artists?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistSimilarArtists: response[\"artists\"]\n      });\n    });\n  }\n\n  artistTopTracksAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/top-tracks?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistTracks: response[\"tracks\"]\n      });\n    });\n  }\n\n  artistGetAllData(id) {\n    this.artistSimilarArtistsAPI(id);\n    this.artistTopTracksAPI(id);\n  }\n\n  processArtistData(response, n) {\n    this.setState({\n      mainArtistData: response[\"artists\"][\"items\"]\n    });\n    this.artistGetAllData(response[\"artists\"][\"items\"][n][\"id\"]);\n  }\n\n  renderSpiderLeg(i) {\n    return React.createElement(SpiderLeg, {\n      value: this.state.spiderLeg[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const mainArtist = this.state.mainArtist;\n    const mainArtistTracks = this.state.mainArtistTracks;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MainArtistForm, {\n      mainArtist: mainArtist,\n      mainArtistTracks: mainArtistTracks,\n      mainArtistChange: this.mainArtistChange,\n      mainArtistSubmit: this.mainArtistSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), this.renderSpiderLeg(0));\n  }\n\n}\n\nclass SpiderLeg extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.props.artistName);\n  }\n\n}\n\nclass MainArtistForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.mainArtistSubmit(this.props.mainArtist);\n  }\n\n  handleChange(event) {\n    this.props.mainArtistChange(event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"mainArtist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"mainArtistInput\",\n      value: this.props.mainArtist,\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"mainArtistTracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(ArtistSongList, {\n      mainArtistTracks: this.props.mainArtistTracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction ArtistSongList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    id: \"mainArtistTrackTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"colgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"col\", {\n    className: \"mainArtistSongTitleColumn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"col\", {\n    className: \"mainArtistButtonColumn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, props.mainArtistTracks.map(mainArtistTracks => React.createElement(\"tr\", {\n    key: mainArtistTracks[\"id\"],\n    className: \"mainArtistTrackTableRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"mainArtistTrackTableCellName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, mainArtistTracks[\"name\"]), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"mainArtistButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Add\")))))));\n}\n\nconst stateKey = \"spotify_auth_state\";\n\nclass SpotifyLogin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\n      const redirect_uri = \"http://localhost:3000\"; //    const scope = \"user-read-private user-read-email\";\n\n      const state = generateRandomString(16);\n      localStorage.setItem(stateKey, state);\n      const url = \"https://accounts.spotify.com/authorize?response_type=token&client_id=\".concat(encodeURIComponent(client_id), \"&redirect_uri=\").concat(encodeURIComponent(redirect_uri), \"&state=\").concat(encodeURIComponent(state));\n      window.location = url;\n    };\n  }\n\n  componentDidMount() {\n    localStorage.removeItem(stateKey);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Log in\");\n  }\n\n}\n\n;\n\nfunction generateRandomString(length) {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (text.length <= length) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\n;\n\nfunction getHashParam(param) {\n  var hash = window.location.hash.substr(1);\n  var result = hash.split('&').reduce(function (result, item) {\n    var parts = item.split('=');\n    result[parts[0]] = parts[1];\n    return result;\n  }, {});\n  return result[param];\n}\n\n;\nReactDOM.render(React.createElement(WholeSite, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 226\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\Jordan\\my-app\\src\\index.js"],"names":["React","ReactDOM","WholeSite","Component","render","PlaylistBuilder","constructor","props","state","mainArtistTracks","mainArtistSimilarArtists","currentMainArtist","mainArtistData","spiderLeg","mainArtistChange","bind","mainArtistSubmit","searchAPI","artistTopTracksAPI","artistSimilarArtistsAPI","artistGetAllData","processArtistData","mainArtistVal","setState","mainArtist","searchTerm","fetch","encodeURIComponent","method","headers","getHashParam","json","then","response","id","n","renderSpiderLeg","i","SpiderLeg","artistName","MainArtistForm","handleSubmit","handleChange","event","preventDefault","target","value","ArtistSongList","map","stateKey","SpotifyLogin","handleClick","client_id","redirect_uri","generateRandomString","localStorage","setItem","url","window","location","componentDidMount","removeItem","length","text","possible","charAt","Math","floor","random","param","hash","substr","result","split","reduce","item","parts","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass WholeSite extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div id=\"spotifyLogin\">\r\n\t\t\t\t\t<SpotifyLogin />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"playlistBuilder\">\r\n\t\t\t\t\t<PlaylistBuilder />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t\t//<SpotifyLogin />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PlaylistBuilder extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {mainArtistTracks:[],\r\n\t\t\t\t\tmainArtistSimilarArtists:[],\r\n\t\t\t\t\tcurrentMainArtist:{},\r\n\t\t\t\t\tmainArtistData:{},\r\n\t\t\t\t\tspiderLeg:[{\"left\": \"10%\", \"top\": \"10%\", \"artistName\": null, \"artistID\": null}]\r\n\t\t\t\t\t};\r\n\t\tthis.mainArtistChange = this.mainArtistChange.bind(this);\r\n\t\tthis.mainArtistSubmit = this.mainArtistSubmit.bind(this);\r\n\t\tthis.searchAPI = this.searchAPI.bind(this);\r\n\t\tthis.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\r\n\t\tthis.artistSimilarArtistsAPI = this.artistSimilarArtistsAPI.bind(this);\r\n\t\tthis.artistGetAllData = this.artistGetAllData.bind(this);\r\n\t\tthis.processArtistData = this.processArtistData.bind(this);\r\n\t}\r\n\t\r\n\tmainArtistChange(mainArtistVal) {\r\n\t\tthis.setState({mainArtist: mainArtistVal});\r\n\t}\r\n\t\r\n\tmainArtistSubmit(mainArtistVal) {\r\n\t\tthis.searchAPI(this.state.mainArtist)\r\n\t}\r\n\t\r\n\tsearchAPI(searchTerm) {\r\n\t\tfetch(\"https://api.spotify.com/v1/search?q=\"+encodeURIComponent(searchTerm)+\"&type=artist&limit=5\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then((response) => {this.processArtistData(response, 0);});\r\n\t}\r\n\t\r\n\tartistSimilarArtistsAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/related-artists?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then(response => {this.setState({mainArtistSimilarArtists: response[\"artists\"]});});\r\n\t}\r\n\t\r\n\tartistTopTracksAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/top-tracks?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then(response => {this.setState({mainArtistTracks: response[\"tracks\"]});});\r\n\t}\r\n\t\r\n\tartistGetAllData(id) {\r\n\t\tthis.artistSimilarArtistsAPI(id);\r\n\t\tthis.artistTopTracksAPI(id);\r\n\t}\r\n\t\r\n\tprocessArtistData(response, n) {\r\n\t\tthis.setState({mainArtistData: response[\"artists\"][\"items\"]});\r\n\t\tthis.artistGetAllData(response[\"artists\"][\"items\"][n][\"id\"]);\r\n\t}\r\n\t\r\n\trenderSpiderLeg(i) {\r\n\t\treturn (\r\n      <SpiderLeg\r\n        value={this.state.spiderLeg[i]}\r\n      />\r\n    );\r\n  }\r\n\t\r\n\trender() {\r\n\t\tconst mainArtist = this.state.mainArtist;\r\n\t\tconst mainArtistTracks = this.state.mainArtistTracks;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<MainArtistForm mainArtist={mainArtist} \r\n\t\t\tmainArtistTracks={mainArtistTracks}\r\n\t\t\tmainArtistChange={this.mainArtistChange}\r\n\t\t\tmainArtistSubmit={this.mainArtistSubmit}\r\n\t\t\t/>\r\n\t\t\t{this.renderSpiderLeg(0)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass SpiderLeg extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button >{this.props.artistName}</button>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass MainArtistForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\tthis.props.mainArtistSubmit(this.props.mainArtist);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.props.mainArtistChange(event.target.value);\r\n  }\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"mainArtist\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<input id=\"mainArtistInput\"\r\n\t\t\t\t\tvalue={this.props.mainArtist} \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={this.handleChange} />\r\n\t\t\t\t\t<div id=\"mainArtistTracks\">\r\n\t\t\t\t\t\t<ArtistSongList mainArtistTracks={this.props.mainArtistTracks} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nfunction ArtistSongList(props) {\r\n\treturn (\r\n         <div>\r\n            <table id='mainArtistTrackTable'>\r\n\t\t\t\t<colgroup>\r\n\t\t\t\t<col className=\"mainArtistSongTitleColumn\" />\r\n\t\t\t\t<col className=\"mainArtistButtonColumn\" />\r\n\t\t\t\t</colgroup>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.mainArtistTracks.map(mainArtistTracks => <tr key={mainArtistTracks[\"id\"]} className=\"mainArtistTrackTableRow\"><td className=\"mainArtistTrackTableCellName\">{mainArtistTracks[\"name\"]}</td><td><button className=\"mainArtistButton\">Add</button></td></tr>)}\r\n\t\t\t\t</tbody>\r\n            </table>\r\n         </div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nconst stateKey = \"spotify_auth_state\";\r\nclass SpotifyLogin extends React.Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(stateKey);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\r\n    const redirect_uri = \"http://localhost:3000\";\r\n//    const scope = \"user-read-private user-read-email\";\r\n    const state = generateRandomString(16);\r\n\r\n    localStorage.setItem(stateKey, state);\r\n\r\n    const url = `https://accounts.spotify.com/authorize?response_type=token&client_id=${encodeURIComponent(client_id)}&redirect_uri=${encodeURIComponent(redirect_uri)}&state=${encodeURIComponent(state)}`;\r\n\r\n    window.location = url;\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.handleClick}>Log in</button>;\r\n  }\r\n};\r\n\r\nfunction generateRandomString(length) {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  while (text.length <= length) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nfunction getHashParam(param) {\r\n\tvar hash = window.location.hash.substr(1);\r\n\r\n\tvar result = hash.split('&').reduce(function (result, item) {\r\n\t\tvar parts = item.split('=');\r\n\t\tresult[parts[0]] = parts[1];\r\n\t\treturn result;\r\n\t}, {});\r\n\treturn result[param]\r\n};\r\n\r\nReactDOM.render(\r\n  <WholeSite />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}