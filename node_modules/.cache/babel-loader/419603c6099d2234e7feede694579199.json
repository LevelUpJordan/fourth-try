{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass WholeSite extends React.Component {\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"spotifyLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(SpotifyLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"playlistBuilder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(PlaylistBuilder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }))) //<SpotifyLogin />\n    ;\n  }\n\n}\n\nclass PlaylistBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainArtistTracks: [],\n      mainArtist: \"\"\n    };\n    this.mainArtistChange = this.mainArtistChange.bind(this);\n    this.mainArtistSubmit = this.mainArtistSubmit.bind(this);\n    this.searchAPI = this.searchAPI.bind(this);\n    this.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\n  }\n\n  mainArtistChange(mainArtistVal) {\n    this.setState({\n      mainArtist: mainArtistVal\n    });\n  }\n\n  mainArtistSubmit(mainArtistVal) {\n    searchAPI(this.state.mainArtist);\n  }\n\n  searchAPI(searchTerm) {\n    fetch(\"https://api.spotify.com/v1/search?q=\" + encodeURIComponent(searchTerm) + \"&type=artist&limit=1\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => artistTopTracksAPI(response[\"artists\"][\"items\"][0][\"id\"]));\n  }\n\n  artistTopTracksAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/top-tracks?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistTracks: response[\"tracks\"]\n      });\n    });\n  }\n\n  render() {\n    const mainArtist = this.state.mainArtist;\n    return React.createElement(MainArtistForm, {\n      mainArtist: mainArtist,\n      mainArtistChange: this.mainArtistChange,\n      mainArtistSubmit: this.mainArtistSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass MainArtistForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.searchAPI = this.searchAPI.bind(this);\n    this.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.mainArtistSubmit(this.props.mainArtist);\n  }\n\n  handleChange(event) {\n    this.props.mainArtistChange(event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainArtist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"mainArtistInput\",\n      value: this.props.mainArtist,\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n/*\r\nclass artistSongList extends React.Component {\r\n\t\r\n\t\trender() {\r\n\t\t\t\r\n}\r\n*/\n\n\nconst stateKey = \"spotify_auth_state\";\n\nclass SpotifyLogin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\n      const redirect_uri = \"http://localhost:3000\"; //    const scope = \"user-read-private user-read-email\";\n\n      const state = generateRandomString(16);\n      localStorage.setItem(stateKey, state);\n      const url = \"https://accounts.spotify.com/authorize?response_type=token&client_id=\".concat(encodeURIComponent(client_id), \"&redirect_uri=\").concat(encodeURIComponent(redirect_uri), \"&state=\").concat(encodeURIComponent(state));\n      window.location = url;\n    };\n  }\n\n  componentDidMount() {\n    localStorage.removeItem(stateKey);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Log in\");\n  }\n\n}\n\n;\n\nfunction generateRandomString(length) {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (text.length <= length) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\n;\n\nfunction getHashParam(param) {\n  var hash = window.location.hash.substr(1);\n  var result = hash.split('&').reduce(function (result, item) {\n    var parts = item.split('=');\n    result[parts[0]] = parts[1];\n    return result;\n  }, {});\n  return result[param];\n}\n\n;\nReactDOM.render(React.createElement(WholeSite, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\Jordan\\my-app\\src\\index.js"],"names":["React","ReactDOM","WholeSite","Component","render","PlaylistBuilder","constructor","props","state","mainArtistTracks","mainArtist","mainArtistChange","bind","mainArtistSubmit","searchAPI","artistTopTracksAPI","mainArtistVal","setState","searchTerm","fetch","encodeURIComponent","method","headers","getHashParam","json","then","response","id","MainArtistForm","handleSubmit","handleChange","event","preventDefault","target","value","stateKey","SpotifyLogin","handleClick","client_id","redirect_uri","generateRandomString","localStorage","setItem","url","window","location","componentDidMount","removeItem","length","text","possible","charAt","Math","floor","random","param","hash","substr","result","split","reduce","item","parts","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass WholeSite extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div id=\"spotifyLogin\">\r\n\t\t\t\t\t<SpotifyLogin />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"playlistBuilder\">\r\n\t\t\t\t\t<PlaylistBuilder />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t\t//<SpotifyLogin />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PlaylistBuilder extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {mainArtistTracks:[],\r\n\t\t\t\t\t  mainArtist:\"\",\r\n\t\t\t\t\t  };\r\n\t\tthis.mainArtistChange = this.mainArtistChange.bind(this);\r\n\t\tthis.mainArtistSubmit = this.mainArtistSubmit.bind(this);\r\n\t\tthis.searchAPI = this.searchAPI.bind(this);\r\n\t\tthis.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\r\n\t}\r\n\t\r\n\tmainArtistChange(mainArtistVal) {\r\n\t\tthis.setState({mainArtist: mainArtistVal});\r\n\t}\r\n\t\r\n\tmainArtistSubmit(mainArtistVal) {\r\n\t\tsearchAPI(this.state.mainArtist)\r\n\t}\r\n\t\r\n\tsearchAPI(searchTerm) {\r\n\t\tfetch(\"https://api.spotify.com/v1/search?q=\"+encodeURIComponent(searchTerm)+\"&type=artist&limit=1\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then(response => artistTopTracksAPI(response[\"artists\"][\"items\"][0][\"id\"]));\r\n\t}\r\n\t\r\n\tartistTopTracksAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/top-tracks?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then(response => {this.setState({mainArtistTracks: response[\"tracks\"]});});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst mainArtist = this.state.mainArtist;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<MainArtistForm mainArtist={mainArtist} \r\n\t\t\tmainArtistChange={this.mainArtistChange}\r\n\t\t\tmainArtistSubmit={this.mainArtistSubmit}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass MainArtistForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.searchAPI = this.searchAPI.bind(this);\r\n\t\tthis.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\tthis.props.mainArtistSubmit(this.props.mainArtist);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.props.mainArtistChange(event.target.value);\r\n  }\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"mainArtist\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<input className=\"mainArtistInput\"\r\n\t\t\t\t\tvalue={this.props.mainArtist} \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={this.handleChange} />\r\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/*\r\nclass artistSongList extends React.Component {\r\n\t\r\n\t\trender() {\r\n\t\t\t\r\n}\r\n*/\r\n\r\n\r\nconst stateKey = \"spotify_auth_state\";\r\nclass SpotifyLogin extends React.Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(stateKey);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\r\n    const redirect_uri = \"http://localhost:3000\";\r\n//    const scope = \"user-read-private user-read-email\";\r\n    const state = generateRandomString(16);\r\n\r\n    localStorage.setItem(stateKey, state);\r\n\r\n    const url = `https://accounts.spotify.com/authorize?response_type=token&client_id=${encodeURIComponent(client_id)}&redirect_uri=${encodeURIComponent(redirect_uri)}&state=${encodeURIComponent(state)}`;\r\n\r\n    window.location = url;\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.handleClick}>Log in</button>;\r\n  }\r\n};\r\n\r\nfunction generateRandomString(length) {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  while (text.length <= length) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nfunction getHashParam(param) {\r\n\tvar hash = window.location.hash.substr(1);\r\n\r\n\tvar result = hash.split('&').reduce(function (result, item) {\r\n\t\tvar parts = item.split('=');\r\n\t\tresult[parts[0]] = parts[1];\r\n\t\treturn result;\r\n\t}, {});\r\n\treturn result[param]\r\n};\r\n\r\nReactDOM.render(\r\n  <WholeSite />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}