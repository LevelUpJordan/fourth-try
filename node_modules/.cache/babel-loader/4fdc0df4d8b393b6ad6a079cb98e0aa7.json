{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass WholeSite extends React.Component {\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"spotifyLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(SpotifyLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"playlistBuilder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(PlaylistBuilder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }))) //<SpotifyLogin />\n    ;\n  }\n\n}\n\nclass PlaylistBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainArtistTracks: [],\n      mainArtistSimilarArtists: [],\n      currentMainArtist: \"\",\n      mainArtistData: {},\n      spiderLegShow: false,\n      spiderLeg: [{\n        \"left\": \"55%\",\n        \"top\": \"6%\",\n        \"leftAnchor\": \"63%\",\n        \"topAnchor\": \"8%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"30%\",\n        \"top\": \"5%\",\n        \"leftAnchor\": \"38%\",\n        \"topAnchor\": \"7%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"60%\",\n        \"top\": \"12%\",\n        \"leftAnchor\": \"68%\",\n        \"topAnchor\": \"14%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"70%\",\n        \"top\": \"30%\",\n        \"leftAnchor\": \"78%\",\n        \"topAnchor\": \"32%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"81%\",\n        \"top\": \"40%\",\n        \"leftAnchor\": \"89%\",\n        \"topAnchor\": \"42%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"25%\",\n        \"top\": \"30%\",\n        \"leftAnchor\": \"33%\",\n        \"topAnchor\": \"32%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"40%\",\n        \"top\": \"20%\",\n        \"leftAnchor\": \"48%\",\n        \"topAnchor\": \"22%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"50%\",\n        \"top\": \"30%\",\n        \"leftAnchor\": \"58%\",\n        \"topAnchor\": \"32%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"78%\",\n        \"top\": \"8%\",\n        \"leftAnchor\": \"86%\",\n        \"topAnchor\": \"10%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"29%\",\n        \"top\": \"60%\",\n        \"leftAnchor\": \"37%\",\n        \"topAnchor\": \"62%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"82%\",\n        \"top\": \"68%\",\n        \"leftAnchor\": \"90%\",\n        \"topAnchor\": \"70%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"26%\",\n        \"top\": \"90%\",\n        \"leftAnchor\": \"34%\",\n        \"topAnchor\": \"92%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"80%\",\n        \"top\": \"76%\",\n        \"leftAnchor\": \"88%\",\n        \"topAnchor\": \"78%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }]\n    };\n    this.mainArtistChange = this.mainArtistChange.bind(this);\n    this.mainArtistSubmit = this.mainArtistSubmit.bind(this);\n    this.searchAPI = this.searchAPI.bind(this);\n    this.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\n    this.artistSimilarArtistsAPI = this.artistSimilarArtistsAPI.bind(this);\n    this.artistGetAllData = this.artistGetAllData.bind(this);\n    this.processArtistData = this.processArtistData.bind(this);\n    this.setNewArtist = this.setNewArtist.bind(this);\n  }\n\n  mainArtistChange(mainArtistVal) {\n    this.setState({\n      currentMainArtist: mainArtistVal\n    });\n  }\n\n  mainArtistSubmit(mainArtistVal) {\n    this.setState({\n      spiderLegShow: true\n    });\n    this.searchAPI(this.state.currentMainArtist);\n  }\n\n  searchAPI(searchTerm) {\n    fetch(\"https://api.spotify.com/v1/search?q=\" + encodeURIComponent(searchTerm) + \"&type=artist&limit=5\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.processArtistData(response, 0);\n    });\n  }\n\n  artistSimilarArtistsAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/related-artists?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistSimilarArtists: response[\"artists\"],\n        spiderLeg: [{\n          \"left\": \"55%\",\n          \"top\": \"6%\",\n          \"leftAnchor\": \"63%\",\n          \"topAnchor\": \"8%\",\n          \"artistName\": response[\"artists\"][0][\"name\"],\n          \"artistID\": response[\"artists\"][0][\"id\"]\n        }, {\n          \"left\": \"30%\",\n          \"top\": \"5%\",\n          \"leftAnchor\": \"38%\",\n          \"topAnchor\": \"7%\",\n          \"artistName\": response[\"artists\"][1][\"name\"],\n          \"artistID\": response[\"artists\"][1][\"id\"]\n        }, {\n          \"left\": \"60%\",\n          \"top\": \"12%\",\n          \"leftAnchor\": \"68%\",\n          \"topAnchor\": \"14%\",\n          \"artistName\": response[\"artists\"][2][\"name\"],\n          \"artistID\": response[\"artists\"][2][\"id\"]\n        }, {\n          \"left\": \"70%\",\n          \"top\": \"30%\",\n          \"leftAnchor\": \"78%\",\n          \"topAnchor\": \"32%\",\n          \"artistName\": response[\"artists\"][3][\"name\"],\n          \"artistID\": response[\"artists\"][3][\"id\"]\n        }, {\n          \"left\": \"81%\",\n          \"top\": \"40%\",\n          \"leftAnchor\": \"89%\",\n          \"topAnchor\": \"42%\",\n          \"artistName\": response[\"artists\"][4][\"name\"],\n          \"artistID\": response[\"artists\"][4][\"id\"]\n        }, {\n          \"left\": \"25%\",\n          \"top\": \"30%\",\n          \"leftAnchor\": \"33%\",\n          \"topAnchor\": \"32%\",\n          \"artistName\": response[\"artists\"][5][\"name\"],\n          \"artistID\": response[\"artists\"][5][\"id\"]\n        }, {\n          \"left\": \"40%\",\n          \"top\": \"20%\",\n          \"leftAnchor\": \"48%\",\n          \"topAnchor\": \"22%\",\n          \"artistName\": response[\"artists\"][6][\"name\"],\n          \"artistID\": response[\"artists\"][6][\"id\"]\n        }, {\n          \"left\": \"50%\",\n          \"top\": \"30%\",\n          \"leftAnchor\": \"58%\",\n          \"topAnchor\": \"32%\",\n          \"artistName\": response[\"artists\"][7][\"name\"],\n          \"artistID\": response[\"artists\"][7][\"id\"]\n        }, {\n          \"left\": \"78%\",\n          \"top\": \"8%\",\n          \"leftAnchor\": \"86%\",\n          \"topAnchor\": \"10%\",\n          \"artistName\": response[\"artists\"][8][\"name\"],\n          \"artistID\": response[\"artists\"][8][\"id\"]\n        }, {\n          \"left\": \"29%\",\n          \"top\": \"60%\",\n          \"leftAnchor\": \"37%\",\n          \"topAnchor\": \"62%\",\n          \"artistName\": response[\"artists\"][9][\"name\"],\n          \"artistID\": response[\"artists\"][9][\"id\"]\n        }, {\n          \"left\": \"82%\",\n          \"top\": \"68%\",\n          \"leftAnchor\": \"90%\",\n          \"topAnchor\": \"70%\",\n          \"artistName\": response[\"artists\"][10][\"name\"],\n          \"artistID\": response[\"artists\"][10][\"id\"]\n        }, {\n          \"left\": \"26%\",\n          \"top\": \"90%\",\n          \"leftAnchor\": \"34%\",\n          \"topAnchor\": \"92%\",\n          \"artistName\": response[\"artists\"][11][\"name\"],\n          \"artistID\": response[\"artists\"][11][\"id\"]\n        }, {\n          \"left\": \"80%\",\n          \"top\": \"76%\",\n          \"leftAnchor\": \"88%\",\n          \"topAnchor\": \"78%\",\n          \"artistName\": response[\"artists\"][12][\"name\"],\n          \"artistID\": response[\"artists\"][12][\"id\"]\n        }]\n      });\n    });\n  }\n\n  setNewArtist(id, name) {\n    this.setState({\n      currentMainArtist: name\n    });\n    this.artistGetAllData(id);\n  }\n\n  artistTopTracksAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/top-tracks?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistTracks: response[\"tracks\"]\n      });\n    });\n  }\n\n  artistGetAllData(id) {\n    this.artistSimilarArtistsAPI(id);\n    this.artistTopTracksAPI(id);\n  }\n\n  processArtistData(response, n) {\n    this.setState({\n      mainArtistSearchData: response[\"artists\"][\"items\"],\n      currentMainArtist: response[\"artists\"][\"items\"][0][\"name\"]\n    });\n    this.artistGetAllData(response[\"artists\"][\"items\"][n][\"id\"]);\n  }\n\n  renderSpiderLeg(i) {\n    return React.createElement(SpiderLeg, {\n      info: this.state.spiderLeg[i],\n      setNewArtist: this.setNewArtist,\n      spiderLegShow: this.state.spiderLegShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const currentMainArtist = this.state.currentMainArtist;\n    const mainArtistTracks = this.state.mainArtistTracks;\n    return React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.renderSpiderLeg(0), this.renderSpiderLeg(1), this.renderSpiderLeg(2), this.renderSpiderLeg(3), this.renderSpiderLeg(4), this.renderSpiderLeg(5), this.renderSpiderLeg(6), this.renderSpiderLeg(7), this.renderSpiderLeg(8), this.renderSpiderLeg(9), this.renderSpiderLeg(10), this.renderSpiderLeg(11), this.renderSpiderLeg(12)), React.createElement(MainArtistForm, {\n      currentMainArtist: currentMainArtist,\n      mainArtistTracks: mainArtistTracks,\n      mainArtistChange: this.mainArtistChange,\n      mainArtistSubmit: this.mainArtistSubmit,\n      currentSearch: this.state.currentMainArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SpiderLeg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.props.setNewArtist(this.props.info[\"artistID\"], this.props.info[\"artistName\"]);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.spiderLegShow ? \"spiderLegShow\" : \"spiderLegHidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"otherArtistButton\",\n      artistid: this.props.info[\"artistID\"],\n      style: {\n        left: this.props.info[\"left\"],\n        top: this.props.info[\"top\"]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.props.info[\"artistName\"]), React.createElement(\"svg\", {\n      className: \"spiderLegConnector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"line\", {\n      x1: this.props.info[\"leftAnchor\"],\n      x2: \"60%\",\n      y1: this.props.info[\"topAnchor\"],\n      y2: \"46%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass MainArtistForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.mainArtistSubmit(this.props.currentMainArtist);\n  }\n\n  handleChange(event) {\n    this.props.mainArtistChange(event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"mainArtist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"mainArtistInput\",\n      value: this.props.currentMainArtist,\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"mainArtistTracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(ArtistSongList, {\n      mainArtistTracks: this.props.mainArtistTracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction ArtistSongList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    id: \"mainArtistTrackTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"colgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"col\", {\n    className: \"mainArtistSongTitleColumn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(\"col\", {\n    className: \"mainArtistButtonColumn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, props.mainArtistTracks.map(mainArtistTracks => React.createElement(\"tr\", {\n    key: mainArtistTracks[\"id\"],\n    className: \"mainArtistTrackTableRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"mainArtistTrackTableCellName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, mainArtistTracks[\"name\"]), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"mainArtistButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Add\")))))));\n}\n\nconst stateKey = \"spotify_auth_state\";\n\nclass SpotifyLogin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\n      const redirect_uri = \"http://localhost:3000\"; //    const scope = \"user-read-private user-read-email\";\n\n      const state = generateRandomString(16);\n      localStorage.setItem(stateKey, state);\n      const url = \"https://accounts.spotify.com/authorize?response_type=token&client_id=\".concat(encodeURIComponent(client_id), \"&redirect_uri=\").concat(encodeURIComponent(redirect_uri), \"&state=\").concat(encodeURIComponent(state));\n      window.location = url;\n    };\n  }\n\n  componentDidMount() {\n    localStorage.removeItem(stateKey);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Log in\");\n  }\n\n}\n\n;\n\nfunction generateRandomString(length) {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (text.length <= length) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\n;\n\nfunction getHashParam(param) {\n  var hash = window.location.hash.substr(1);\n  var result = hash.split('&').reduce(function (result, item) {\n    var parts = item.split('=');\n    result[parts[0]] = parts[1];\n    return result;\n  }, {});\n  return result[param];\n}\n\n;\n\nfunction addStringPercents(percent1, percent2) {\n  var percent1Num = parseInt(percent1.replace(\"%\", \"\"));\n  var percent2Num = parseInt(percent2.replace(\"%\", \"\"));\n  var totalPercentNum = percent1Num + percent2Num;\n  return totalPercentNum + \"%\";\n}\n\nReactDOM.render(React.createElement(WholeSite, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 294\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\Jordan\\my-app\\src\\index.js"],"names":["React","ReactDOM","WholeSite","Component","render","PlaylistBuilder","constructor","props","state","mainArtistTracks","mainArtistSimilarArtists","currentMainArtist","mainArtistData","spiderLegShow","spiderLeg","mainArtistChange","bind","mainArtistSubmit","searchAPI","artistTopTracksAPI","artistSimilarArtistsAPI","artistGetAllData","processArtistData","setNewArtist","mainArtistVal","setState","searchTerm","fetch","encodeURIComponent","method","headers","getHashParam","json","then","response","id","name","n","mainArtistSearchData","renderSpiderLeg","i","float","SpiderLeg","handleClick","event","info","left","top","MainArtistForm","handleSubmit","handleChange","preventDefault","target","value","ArtistSongList","map","stateKey","SpotifyLogin","client_id","redirect_uri","generateRandomString","localStorage","setItem","url","window","location","componentDidMount","removeItem","length","text","possible","charAt","Math","floor","random","param","hash","substr","result","split","reduce","item","parts","addStringPercents","percent1","percent2","percent1Num","parseInt","replace","percent2Num","totalPercentNum","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass WholeSite extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div id=\"spotifyLogin\">\r\n\t\t\t\t\t<SpotifyLogin />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"playlistBuilder\">\r\n\t\t\t\t\t<PlaylistBuilder />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t\t//<SpotifyLogin />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PlaylistBuilder extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {mainArtistTracks:[],\r\n\t\t\t\t\tmainArtistSimilarArtists:[],\r\n\t\t\t\t\tcurrentMainArtist:\"\",\r\n\t\t\t\t\tmainArtistData:{},\r\n\t\t\t\t\tspiderLegShow:false,\r\n\t\t\t\t\tspiderLeg:[{\"left\": \"55%\", \"top\": \"6%\", \"leftAnchor\": \"63%\", \"topAnchor\": \"8%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"30%\", \"top\": \"5%\", \"leftAnchor\":\"38%\", \"topAnchor\":\"7%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"60%\", \"top\": \"12%\", \"leftAnchor\":\"68%\", \"topAnchor\":\"14%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"70%\", \"top\": \"30%\", \"leftAnchor\":\"78%\", \"topAnchor\":\"32%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"81%\", \"top\": \"40%\", \"leftAnchor\":\"89%\", \"topAnchor\":\"42%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"25%\", \"top\": \"30%\", \"leftAnchor\":\"33%\", \"topAnchor\":\"32%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"40%\", \"top\": \"20%\", \"leftAnchor\":\"48%\", \"topAnchor\":\"22%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"50%\", \"top\": \"30%\", \"leftAnchor\":\"58%\", \"topAnchor\":\"32%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"78%\", \"top\": \"8%\", \"leftAnchor\":\"86%\", \"topAnchor\":\"10%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"29%\", \"top\": \"60%\", \"leftAnchor\":\"37%\", \"topAnchor\":\"62%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"82%\", \"top\": \"68%\", \"leftAnchor\": \"90%\", \"topAnchor\": \"70%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"26%\", \"top\": \"90%\", \"leftAnchor\": \"34%\", \"topAnchor\": \"92%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"80%\", \"top\": \"76%\", \"leftAnchor\":\"88%\", \"topAnchor\":\"78%\", \"artistName\": \"\", \"artistID\": 0}\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\tthis.mainArtistChange = this.mainArtistChange.bind(this);\r\n\t\tthis.mainArtistSubmit = this.mainArtistSubmit.bind(this);\r\n\t\tthis.searchAPI = this.searchAPI.bind(this);\r\n\t\tthis.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\r\n\t\tthis.artistSimilarArtistsAPI = this.artistSimilarArtistsAPI.bind(this);\r\n\t\tthis.artistGetAllData = this.artistGetAllData.bind(this);\r\n\t\tthis.processArtistData = this.processArtistData.bind(this);\r\n\t\tthis.setNewArtist = this.setNewArtist.bind(this);\r\n\t}\r\n\t\r\n\tmainArtistChange(mainArtistVal) {\r\n\t\tthis.setState({currentMainArtist: mainArtistVal});\r\n\t}\r\n\t\r\n\tmainArtistSubmit(mainArtistVal) {\r\n\t\tthis.setState({spiderLegShow: true});\r\n\t\tthis.searchAPI(this.state.currentMainArtist)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tsearchAPI(searchTerm) {\r\n\t\tfetch(\"https://api.spotify.com/v1/search?q=\"+encodeURIComponent(searchTerm)+\"&type=artist&limit=5\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then((response) => {this.processArtistData(response, 0);});\r\n\t}\r\n\t\r\n\tartistSimilarArtistsAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/related-artists?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then((response) => {this.setState({mainArtistSimilarArtists: response[\"artists\"],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tspiderLeg: [{\"left\": \"55%\", \"top\": \"6%\", \"leftAnchor\": \"63%\", \"topAnchor\": \"8%\", \"artistName\": response[\"artists\"][0][\"name\"], \"artistID\": response[\"artists\"][0][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"30%\", \"top\": \"5%\", \"leftAnchor\": \"38%\", \"topAnchor\": \"7%\", \"artistName\": response[\"artists\"][1][\"name\"], \"artistID\": response[\"artists\"][1][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"60%\", \"top\": \"12%\", \"leftAnchor\": \"68%\", \"topAnchor\": \"14%\", \"artistName\": response[\"artists\"][2][\"name\"], \"artistID\": response[\"artists\"][2][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"70%\", \"top\": \"30%\", \"leftAnchor\": \"78%\", \"topAnchor\": \"32%\", \"artistName\": response[\"artists\"][3][\"name\"], \"artistID\": response[\"artists\"][3][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"81%\", \"top\": \"40%\", \"leftAnchor\":\"89%\", \"topAnchor\":\"42%\", \"artistName\": response[\"artists\"][4][\"name\"], \"artistID\": response[\"artists\"][4][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"25%\", \"top\": \"30%\", \"leftAnchor\": \"33%\", \"topAnchor\": \"32%\", \"artistName\": response[\"artists\"][5][\"name\"], \"artistID\": response[\"artists\"][5][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"40%\", \"top\": \"20%\", \"leftAnchor\": \"48%\", \"topAnchor\": \"22%\", \"artistName\": response[\"artists\"][6][\"name\"], \"artistID\": response[\"artists\"][6][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"50%\", \"top\": \"30%\", \"leftAnchor\": \"58%\", \"topAnchor\": \"32%\", \"artistName\": response[\"artists\"][7][\"name\"], \"artistID\": response[\"artists\"][7][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"78%\", \"top\": \"8%\", \"leftAnchor\": \"86%\", \"topAnchor\": \"10%\", \"artistName\": response[\"artists\"][8][\"name\"], \"artistID\": response[\"artists\"][8][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"29%\", \"top\": \"60%\", \"leftAnchor\":\"37%\", \"topAnchor\":\"62%\", \"artistName\": response[\"artists\"][9][\"name\"], \"artistID\": response[\"artists\"][9][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"82%\", \"top\": \"68%\", \"leftAnchor\": \"90%\", \"topAnchor\": \"70%\", \"artistName\": response[\"artists\"][10][\"name\"], \"artistID\": response[\"artists\"][10][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"26%\", \"top\": \"90%\", \"leftAnchor\": \"34%\", \"topAnchor\": \"92%\", \"artistName\": response[\"artists\"][11][\"name\"], \"artistID\": response[\"artists\"][11][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"80%\", \"top\": \"76%\", \"leftAnchor\": \"88%\", \"topAnchor\": \"78%\", \"artistName\": response[\"artists\"][12][\"name\"], \"artistID\": response[\"artists\"][12][\"id\"]}]});});\r\n\t}\r\n\t\r\n\tsetNewArtist(id, name) {\r\n\t\tthis.setState({currentMainArtist: name});\r\n\t\tthis.artistGetAllData(id);\r\n\t}\r\n\t\r\n\tartistTopTracksAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/top-tracks?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then(response => {this.setState({mainArtistTracks: response[\"tracks\"]});});\r\n\t}\r\n\t\r\n\tartistGetAllData(id) {\r\n\t\tthis.artistSimilarArtistsAPI(id);\r\n\t\tthis.artistTopTracksAPI(id);\r\n\t}\r\n\t\r\n\tprocessArtistData(response, n) {\r\n\t\tthis.setState({mainArtistSearchData: response[\"artists\"][\"items\"], currentMainArtist: response[\"artists\"][\"items\"][0][\"name\"]});\r\n\t\tthis.artistGetAllData(response[\"artists\"][\"items\"][n][\"id\"]);\r\n\t}\r\n\t\r\n\trenderSpiderLeg(i) {\r\n\t\treturn (\r\n      <SpiderLeg\r\n        info={this.state.spiderLeg[i]}\r\n\t\tsetNewArtist={this.setNewArtist}\r\n\t\tspiderLegShow={this.state.spiderLegShow}\r\n      />\r\n    );\r\n  }\r\n\t\r\n\trender() {\r\n\t\tconst currentMainArtist = this.state.currentMainArtist;\r\n\t\tconst mainArtistTracks = this.state.mainArtistTracks;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div style={{float: \"right\"}}>\r\n\t\t\t<div>\r\n\t\t\t{this.renderSpiderLeg(0)}\r\n\t\t\t{this.renderSpiderLeg(1)}\r\n\t\t\t{this.renderSpiderLeg(2)}\r\n\t\t\t{this.renderSpiderLeg(3)}\r\n\t\t\t{this.renderSpiderLeg(4)}\r\n\t\t\t{this.renderSpiderLeg(5)}\r\n\t\t\t{this.renderSpiderLeg(6)}\r\n\t\t\t{this.renderSpiderLeg(7)}\r\n\t\t\t{this.renderSpiderLeg(8)}\r\n\t\t\t{this.renderSpiderLeg(9)}\r\n\t\t\t{this.renderSpiderLeg(10)}\r\n\t\t\t{this.renderSpiderLeg(11)}\r\n\t\t\t{this.renderSpiderLeg(12)}\r\n\t\t\t</div>\r\n\t\t\t<MainArtistForm currentMainArtist={currentMainArtist} \r\n\t\t\tmainArtistTracks={mainArtistTracks}\r\n\t\t\tmainArtistChange={this.mainArtistChange}\r\n\t\t\tmainArtistSubmit={this.mainArtistSubmit}\r\n\t\t\tcurrentSearch={this.state.currentMainArtist}\r\n\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass SpiderLeg extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\t\r\n\thandleClick(event) {\r\n\t\tthis.props.setNewArtist(this.props.info[\"artistID\"], this.props.info[\"artistName\"]);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className= {this.props.spiderLegShow ? \"spiderLegShow\" : \"spiderLegHidden\"}>\r\n\t\t\t<button onClick={this.handleClick} className=\"otherArtistButton\" artistid={this.props.info[\"artistID\"]} style={{left: this.props.info[\"left\"], top: this.props.info[\"top\"]}}>{this.props.info[\"artistName\"]}</button>\r\n\t\t\t<svg className=\"spiderLegConnector\"><line x1={this.props.info[\"leftAnchor\"]} x2=\"60%\" y1={this.props.info[\"topAnchor\"]} y2=\"46%\"/></svg>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass MainArtistForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\tthis.props.mainArtistSubmit(this.props.currentMainArtist);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.props.mainArtistChange(event.target.value);\r\n  }\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"mainArtist\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<input id=\"mainArtistInput\"\r\n\t\t\t\t\tvalue={this.props.currentMainArtist} \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={this.handleChange} />\r\n\t\t\t\t\t<div id=\"mainArtistTracks\">\r\n\t\t\t\t\t\t<ArtistSongList mainArtistTracks={this.props.mainArtistTracks} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nfunction ArtistSongList(props) {\r\n\treturn (\r\n         <div>\r\n            <table id='mainArtistTrackTable'>\r\n\t\t\t\t<colgroup>\r\n\t\t\t\t<col className=\"mainArtistSongTitleColumn\" />\r\n\t\t\t\t<col className=\"mainArtistButtonColumn\" />\r\n\t\t\t\t</colgroup>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.mainArtistTracks.map(mainArtistTracks => <tr key={mainArtistTracks[\"id\"]} className=\"mainArtistTrackTableRow\"><td className=\"mainArtistTrackTableCellName\">{mainArtistTracks[\"name\"]}</td><td><button className=\"mainArtistButton\">Add</button></td></tr>)}\r\n\t\t\t\t</tbody>\r\n            </table>\r\n         </div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nconst stateKey = \"spotify_auth_state\";\r\nclass SpotifyLogin extends React.Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(stateKey);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\r\n    const redirect_uri = \"http://localhost:3000\";\r\n//    const scope = \"user-read-private user-read-email\";\r\n    const state = generateRandomString(16);\r\n\r\n    localStorage.setItem(stateKey, state);\r\n\r\n    const url = `https://accounts.spotify.com/authorize?response_type=token&client_id=${encodeURIComponent(client_id)}&redirect_uri=${encodeURIComponent(redirect_uri)}&state=${encodeURIComponent(state)}`;\r\n\r\n    window.location = url;\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.handleClick}>Log in</button>;\r\n  }\r\n};\r\n\r\nfunction generateRandomString(length) {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  while (text.length <= length) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nfunction getHashParam(param) {\r\n\tvar hash = window.location.hash.substr(1);\r\n\r\n\tvar result = hash.split('&').reduce(function (result, item) {\r\n\t\tvar parts = item.split('=');\r\n\t\tresult[parts[0]] = parts[1];\r\n\t\treturn result;\r\n\t}, {});\r\n\treturn result[param]\r\n};\r\n\r\nfunction addStringPercents(percent1, percent2) {\r\n\tvar percent1Num = parseInt(percent1.replace(\"%\",\"\"));\r\n\tvar percent2Num = parseInt(percent2.replace(\"%\",\"\"));\r\n\tvar totalPercentNum = percent1Num+percent2Num;\r\n\treturn totalPercentNum+\"%\"\r\n}\r\n\r\nReactDOM.render(\r\n  <WholeSite />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}