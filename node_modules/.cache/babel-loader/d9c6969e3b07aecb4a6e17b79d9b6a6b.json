{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass WholeSite extends React.Component {\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"spotifyLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(SpotifyLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"playlistBuilder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(PlaylistBuilder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }))) //<SpotifyLogin />\n    ;\n  }\n\n}\n\nclass PlaylistBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainArtistTracks: [],\n      mainArtistSimilarArtists: [],\n      currentMainArtist: \"\",\n      mainArtistData: {},\n      spiderLegShow: false,\n      spiderLeg: [{\n        \"left\": \"55%\",\n        \"top\": \"6%\",\n        \"leftAnchor\": \"63%\",\n        \"topAnchor\": \"8%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"30%\",\n        \"top\": \"5%\",\n        \"leftAnchor\": \"38%\",\n        \"topAnchor\": \"7%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"60%\",\n        \"top\": \"12%\",\n        \"leftAnchor\": \"68%\",\n        \"topAnchor\": \"14%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"70%\",\n        \"top\": \"30%\",\n        \"leftAnchor\": \"78%\",\n        \"topAnchor\": \"32%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"81%\",\n        \"top\": \"40%\",\n        \"leftAnchor\": \"89%\",\n        \"topAnchor\": \"42%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"27%\",\n        \"top\": \"30%\",\n        \"leftAnchor\": \"35%\",\n        \"topAnchor\": \"32%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"40%\",\n        \"top\": \"20%\",\n        \"leftAnchor\": \"48%\",\n        \"topAnchor\": \"22%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"50%\",\n        \"top\": \"30%\",\n        \"leftAnchor\": \"58%\",\n        \"topAnchor\": \"32%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"78%\",\n        \"top\": \"8%\",\n        \"leftAnchor\": \"86%\",\n        \"topAnchor\": \"10%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"29%\",\n        \"top\": \"60%\",\n        \"leftAnchor\": \"37%\",\n        \"topAnchor\": \"62%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"82%\",\n        \"top\": \"68%\",\n        \"leftAnchor\": \"90%\",\n        \"topAnchor\": \"70%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"26%\",\n        \"top\": \"90%\",\n        \"leftAnchor\": \"34%\",\n        \"topAnchor\": \"92%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }, {\n        \"left\": \"80%\",\n        \"top\": \"76%\",\n        \"leftAnchor\": \"88%\",\n        \"topAnchor\": \"78%\",\n        \"artistName\": \"\",\n        \"artistID\": 0\n      }],\n      playlistName: \"\",\n      playlistSongs: [],\n      currentSearchIndex: 0,\n      userID: \"\"\n    };\n    this.mainArtistChange = this.mainArtistChange.bind(this);\n    this.mainArtistSubmit = this.mainArtistSubmit.bind(this);\n    this.searchAPI = this.searchAPI.bind(this);\n    this.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\n    this.artistSimilarArtistsAPI = this.artistSimilarArtistsAPI.bind(this);\n    this.artistGetAllData = this.artistGetAllData.bind(this);\n    this.processArtistData = this.processArtistData.bind(this);\n    this.setNewArtist = this.setNewArtist.bind(this);\n    this.playlistNameChange = this.playlistNameChange.bind(this);\n    this.submitSong = this.submitSong.bind(this);\n    this.tryNextArtist = this.tryNextArtist.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.userID === \"\") {\n      this.getCurrentUserID();\n    }\n  }\n\n  mainArtistChange(mainArtistVal) {\n    this.setState({\n      currentMainArtist: mainArtistVal\n    });\n  }\n\n  mainArtistSubmit(mainArtistVal) {\n    this.setState({\n      spiderLegShow: true,\n      currentSearchIndex: 0\n    });\n    this.searchAPI(this.state.currentMainArtist);\n  }\n\n  playlistNameChange(playlistName) {\n    this.setState({\n      playlistName: playlistName\n    });\n  }\n\n  getCurrentUserID() {\n    fetch(\"https://api.spotify.com/v1/me\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        userID: response[\"id\"]\n      });\n    });\n  }\n\n  searchAPI(searchTerm) {\n    fetch(\"https://api.spotify.com/v1/search?q=\" + encodeURIComponent(searchTerm) + \"&type=artist&limit=5\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.processArtistData(response, 0);\n    });\n  }\n\n  artistSimilarArtistsAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/related-artists?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistSimilarArtists: response[\"artists\"],\n        spiderLeg: [{\n          \"left\": \"55%\",\n          \"top\": \"6%\",\n          \"leftAnchor\": \"63%\",\n          \"topAnchor\": \"8%\",\n          \"artistName\": response[\"artists\"][0][\"name\"],\n          \"artistID\": response[\"artists\"][0][\"id\"]\n        }, {\n          \"left\": \"30%\",\n          \"top\": \"5%\",\n          \"leftAnchor\": \"38%\",\n          \"topAnchor\": \"7%\",\n          \"artistName\": response[\"artists\"][1][\"name\"],\n          \"artistID\": response[\"artists\"][1][\"id\"]\n        }, {\n          \"left\": \"60%\",\n          \"top\": \"12%\",\n          \"leftAnchor\": \"68%\",\n          \"topAnchor\": \"14%\",\n          \"artistName\": response[\"artists\"][2][\"name\"],\n          \"artistID\": response[\"artists\"][2][\"id\"]\n        }, {\n          \"left\": \"70%\",\n          \"top\": \"30%\",\n          \"leftAnchor\": \"78%\",\n          \"topAnchor\": \"32%\",\n          \"artistName\": response[\"artists\"][3][\"name\"],\n          \"artistID\": response[\"artists\"][3][\"id\"]\n        }, {\n          \"left\": \"81%\",\n          \"top\": \"40%\",\n          \"leftAnchor\": \"89%\",\n          \"topAnchor\": \"42%\",\n          \"artistName\": response[\"artists\"][4][\"name\"],\n          \"artistID\": response[\"artists\"][4][\"id\"]\n        }, {\n          \"left\": \"27%\",\n          \"top\": \"30%\",\n          \"leftAnchor\": \"35%\",\n          \"topAnchor\": \"32%\",\n          \"artistName\": response[\"artists\"][5][\"name\"],\n          \"artistID\": response[\"artists\"][5][\"id\"]\n        }, {\n          \"left\": \"40%\",\n          \"top\": \"20%\",\n          \"leftAnchor\": \"48%\",\n          \"topAnchor\": \"22%\",\n          \"artistName\": response[\"artists\"][6][\"name\"],\n          \"artistID\": response[\"artists\"][6][\"id\"]\n        }, {\n          \"left\": \"50%\",\n          \"top\": \"30%\",\n          \"leftAnchor\": \"58%\",\n          \"topAnchor\": \"32%\",\n          \"artistName\": response[\"artists\"][7][\"name\"],\n          \"artistID\": response[\"artists\"][7][\"id\"]\n        }, {\n          \"left\": \"78%\",\n          \"top\": \"8%\",\n          \"leftAnchor\": \"86%\",\n          \"topAnchor\": \"10%\",\n          \"artistName\": response[\"artists\"][8][\"name\"],\n          \"artistID\": response[\"artists\"][8][\"id\"]\n        }, {\n          \"left\": \"29%\",\n          \"top\": \"60%\",\n          \"leftAnchor\": \"37%\",\n          \"topAnchor\": \"62%\",\n          \"artistName\": response[\"artists\"][9][\"name\"],\n          \"artistID\": response[\"artists\"][9][\"id\"]\n        }, {\n          \"left\": \"82%\",\n          \"top\": \"68%\",\n          \"leftAnchor\": \"90%\",\n          \"topAnchor\": \"70%\",\n          \"artistName\": response[\"artists\"][10][\"name\"],\n          \"artistID\": response[\"artists\"][10][\"id\"]\n        }, {\n          \"left\": \"26%\",\n          \"top\": \"90%\",\n          \"leftAnchor\": \"34%\",\n          \"topAnchor\": \"92%\",\n          \"artistName\": response[\"artists\"][11][\"name\"],\n          \"artistID\": response[\"artists\"][11][\"id\"]\n        }, {\n          \"left\": \"80%\",\n          \"top\": \"76%\",\n          \"leftAnchor\": \"88%\",\n          \"topAnchor\": \"78%\",\n          \"artistName\": response[\"artists\"][12][\"name\"],\n          \"artistID\": response[\"artists\"][12][\"id\"]\n        }]\n      });\n    });\n  }\n\n  setNewArtist(id, name) {\n    this.setState({\n      currentMainArtist: name\n    });\n    this.artistGetAllData(id);\n  }\n\n  artistTopTracksAPI(id) {\n    fetch(\"https://api.spotify.com/v1/artists/\" + encodeURIComponent(id) + \"/top-tracks?market=from_token\", {\n      method: 'get',\n      headers: {\n        'Authorization': 'Bearer ' + getHashParam(\"access_token\")\n      },\n      json: true\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        mainArtistTracks: response[\"tracks\"]\n      });\n    });\n  }\n\n  artistGetAllData(id) {\n    this.artistSimilarArtistsAPI(id);\n    this.artistTopTracksAPI(id);\n  }\n\n  processArtistData(response, n) {\n    this.setState({\n      mainArtistSearchData: response[\"artists\"][\"items\"],\n      currentMainArtist: response[\"artists\"][\"items\"][n][\"name\"]\n    });\n    this.artistGetAllData(response[\"artists\"][\"items\"][n][\"id\"]);\n  }\n\n  submitSong(artist, title, uri) {\n    const newArray = this.state.playlistSongs;\n    newArray.push({\n      \"artist\": artist,\n      \"title\": title,\n      \"uri\": uri\n    });\n    this.setState({\n      playlistSongs: newArray\n    });\n  }\n\n  tryNextArtist() {\n    var searchIndex = this.state.currentSearchIndex;\n    searchIndex++;\n    this.setState({\n      currentMainArtist: this.state.mainArtistSearchData[searchIndex][\"name\"],\n      currentSearchIndex: searchIndex\n    });\n    ;\n    this.artistGetAllData(this.state.mainArtistSearchData[searchIndex][\"id\"]);\n  }\n\n  renderSpiderLeg(i) {\n    return React.createElement(SpiderLeg, {\n      info: this.state.spiderLeg[i],\n      setNewArtist: this.setNewArtist,\n      spiderLegShow: this.state.spiderLegShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(PlaylistArea, {\n      playlistName: this.state.playlistName,\n      playlistNameChange: this.playlistNameChange,\n      playlistSongs: this.state.playlistSongs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.renderSpiderLeg(0), this.renderSpiderLeg(1), this.renderSpiderLeg(2), this.renderSpiderLeg(3), this.renderSpiderLeg(4), this.renderSpiderLeg(5), this.renderSpiderLeg(6), this.renderSpiderLeg(7), this.renderSpiderLeg(8), this.renderSpiderLeg(9), this.renderSpiderLeg(10), this.renderSpiderLeg(11), this.renderSpiderLeg(12)), React.createElement(MainArtistForm, {\n      currentMainArtist: this.state.currentMainArtist,\n      mainArtistTracks: this.state.mainArtistTracks,\n      mainArtistChange: this.mainArtistChange,\n      mainArtistSubmit: this.mainArtistSubmit,\n      currentSearch: this.state.currentMainArtist,\n      spiderLegShow: this.state.spiderLegShow,\n      submitSong: this.submitSong,\n      playlistSongs: this.state.playlistSongs,\n      tryNextArtist: this.tryNextArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SpiderLeg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.props.setNewArtist(this.props.info[\"artistID\"], this.props.info[\"artistName\"]);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.spiderLegShow ? \"\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"otherArtistButton\",\n      artistid: this.props.info[\"artistID\"],\n      style: {\n        left: this.props.info[\"left\"],\n        top: this.props.info[\"top\"]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.props.info[\"artistName\"]), React.createElement(\"svg\", {\n      className: \"spiderLegConnector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"line\", {\n      x1: this.props.info[\"leftAnchor\"],\n      x2: \"60%\",\n      y1: this.props.info[\"topAnchor\"],\n      y2: \"46%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass MainArtistForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWrongArtist = this.handleWrongArtist.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.mainArtistSubmit(this.props.currentMainArtist);\n  }\n\n  handleChange(event) {\n    this.props.mainArtistChange(event.target.value);\n  }\n\n  handleWrongArtist(event) {\n    this.props.tryNextArtist();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"mainArtist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"mainArtistInput\",\n      value: this.props.currentMainArtist,\n      type: \"text\",\n      onChange: this.handleChange,\n      placeholder: \"Enter Artist Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"mainArtistTracks\",\n      className: this.props.spiderLegShow ? \"\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(ArtistSongList, {\n      mainArtistTracks: this.props.mainArtistTracks,\n      submitSong: this.props.submitSong,\n      artist: this.props.currentMainArtist,\n      playlistSongs: this.props.playlistSongs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"mainArtistButton\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      className: \"mainArtistButton\",\n      onClick: this.handleWrongArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Wrong Artist\"));\n  }\n\n}\n\nclass ArtistSongList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(artist, track, uri) {\n    this.props.submitSong(artist, track, uri);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"mainArtistTrackTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"colgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"col\", {\n      className: \"mainArtistSongTitleColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      className: \"mainArtistButtonColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.props.mainArtistTracks.map(mainArtistTracks => React.createElement(\"tr\", {\n      onClick: () => this.handleClick(this.props.artist, mainArtistTracks[\"name\"], mainArtistTracks[\"uri\"]),\n      artist: this.props.artist,\n      uri: mainArtistTracks[\"uri\"],\n      key: mainArtistTracks[\"id\"],\n      className: \"mainArtistTrackTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"mainArtistTrackTableCellName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, mainArtistTracks[\"name\"]), React.createElement(\"td\", {\n      className: \"mainArtistPlusColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"+\"))))));\n  }\n\n}\n\nclass PlaylistArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    alert(\"Not Done Yet\");\n  }\n\n  handleChange(event) {\n    this.props.playlistNameChange(event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"playListArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"playlistNameInput\",\n      value: this.props.playlistName,\n      type: \"text\",\n      onChange: this.handleChange,\n      placeholder: \"Enter Playlist Name Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(PlaylistSongList, {\n      playlistSongs: this.props.playlistSongs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      id: \"playlistSubmit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Create Playlist\"));\n  }\n\n}\n\nclass PlaylistSongList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    alert(\"Not Done Yet\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"playlistTrackTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"colgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"col\", {\n      className: \"playlistSongTitleColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      className: \"playlistMinusColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, this.props.playlistSongs.map(playlistSongs => React.createElement(\"tr\", {\n      onClick: () => this.handleClick(),\n      artist: playlistSongs[\"artist\"],\n      uri: playlistSongs[\"uri\"],\n      className: \"playlistTrackTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"playlistTrackTableCellName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, playlistSongs[\"artist\"] + \": \" + playlistSongs[\"title\"]), React.createElement(\"td\", {\n      className: \"playlistMinus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"-\"))))));\n  }\n\n}\n\nconst stateKey = \"spotify_auth_state\";\n\nclass SpotifyLogin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\n      const redirect_uri = \"http://localhost:3000\"; //    const scope = \"user-read-private user-read-email\";\n\n      const state = generateRandomString(16);\n      localStorage.setItem(stateKey, state);\n      const url = \"https://accounts.spotify.com/authorize?response_type=token&client_id=\".concat(encodeURIComponent(client_id), \"&redirect_uri=\").concat(encodeURIComponent(redirect_uri), \"&state=\").concat(encodeURIComponent(state));\n      window.location = url;\n    };\n  }\n\n  componentDidMount() {\n    localStorage.removeItem(stateKey);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Log in\");\n  }\n\n}\n\n;\n\nfunction generateRandomString(length) {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (text.length <= length) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}\n\n;\n\nfunction getHashParam(param) {\n  var hash = window.location.hash.substr(1);\n  var result = hash.split('&').reduce(function (result, item) {\n    var parts = item.split('=');\n    result[parts[0]] = parts[1];\n    return result;\n  }, {});\n  return result[param];\n}\n\n;\n\nfunction addStringPercents(percent1, percent2) {\n  var percent1Num = parseInt(percent1.replace(\"%\", \"\"));\n  var percent2Num = parseInt(percent2.replace(\"%\", \"\"));\n  var totalPercentNum = percent1Num + percent2Num;\n  return totalPercentNum + \"%\";\n}\n\nReactDOM.render(React.createElement(WholeSite, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 415\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\Jordan\\my-app\\src\\index.js"],"names":["React","ReactDOM","WholeSite","Component","render","PlaylistBuilder","constructor","props","state","mainArtistTracks","mainArtistSimilarArtists","currentMainArtist","mainArtistData","spiderLegShow","spiderLeg","playlistName","playlistSongs","currentSearchIndex","userID","mainArtistChange","bind","mainArtistSubmit","searchAPI","artistTopTracksAPI","artistSimilarArtistsAPI","artistGetAllData","processArtistData","setNewArtist","playlistNameChange","submitSong","tryNextArtist","componentDidMount","getCurrentUserID","mainArtistVal","setState","fetch","method","headers","getHashParam","json","then","response","searchTerm","encodeURIComponent","id","name","n","mainArtistSearchData","artist","title","uri","newArray","push","searchIndex","renderSpiderLeg","i","SpiderLeg","handleClick","event","info","left","top","MainArtistForm","handleSubmit","handleChange","handleWrongArtist","preventDefault","target","value","ArtistSongList","track","map","PlaylistArea","alert","PlaylistSongList","stateKey","SpotifyLogin","client_id","redirect_uri","generateRandomString","localStorage","setItem","url","window","location","removeItem","length","text","possible","charAt","Math","floor","random","param","hash","substr","result","split","reduce","item","parts","addStringPercents","percent1","percent2","percent1Num","parseInt","replace","percent2Num","totalPercentNum","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACvCC,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAIC;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJD,CADD,CASC;AATD;AAWA;;AAbsC;;AAgBxC,MAAMC,eAAN,SAA8BL,KAAK,CAACG,SAApC,CAA8C;AAC7CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,gBAAgB,EAAC,EAAlB;AACVC,MAAAA,wBAAwB,EAAC,EADf;AAEVC,MAAAA,iBAAiB,EAAC,EAFR;AAGVC,MAAAA,cAAc,EAAC,EAHL;AAIVC,MAAAA,aAAa,EAAC,KAJJ;AAKVC,MAAAA,SAAS,EAAC,CAAC;AAAC,gBAAQ,KAAT;AAAgB,eAAO,IAAvB;AAA6B,sBAAc,KAA3C;AAAkD,qBAAa,IAA/D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OAAD,EACP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,IAAvB;AAA6B,sBAAa,KAA1C;AAAiD,qBAAY,IAA7D;AAAmE,sBAAc,EAAjF;AAAqF,oBAAY;AAAjG,OADO,EAEP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OAFO,EAGP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OAHO,EAIP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OAJO,EAKP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OALO,EAMP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OANO,EAOP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OAPO,EAQP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,IAAvB;AAA6B,sBAAa,KAA1C;AAAiD,qBAAY,KAA7D;AAAoE,sBAAc,EAAlF;AAAsF,oBAAY;AAAlG,OARO,EASP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OATO,EAUP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAc,KAA5C;AAAmD,qBAAa,KAAhE;AAAuE,sBAAc,EAArF;AAAyF,oBAAY;AAArG,OAVO,EAWP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAc,KAA5C;AAAmD,qBAAa,KAAhE;AAAuE,sBAAc,EAArF;AAAyF,oBAAY;AAArG,OAXO,EAYP;AAAC,gBAAQ,KAAT;AAAgB,eAAO,KAAvB;AAA8B,sBAAa,KAA3C;AAAkD,qBAAY,KAA9D;AAAqE,sBAAc,EAAnF;AAAuF,oBAAY;AAAnG,OAZO,CALA;AAmBVC,MAAAA,YAAY,EAAC,EAnBH;AAoBVC,MAAAA,aAAa,EAAC,EApBJ;AAqBVC,MAAAA,kBAAkB,EAAC,CArBT;AAsBVC,MAAAA,MAAM,EAAC;AAtBG,KAAb;AAwBA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBH,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKI,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BJ,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKK,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBL,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKM,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBN,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKO,YAAL,GAAoB,KAAKA,YAAL,CAAkBP,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKQ,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBR,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKS,UAAL,GAAkB,KAAKA,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKU,aAAL,GAAqB,KAAKA,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB,CAArB;AACA;;AAEDW,EAAAA,iBAAiB,GAAG;AACnB,QAAI,KAAKvB,KAAL,CAAWU,MAAX,KAAsB,EAA1B,EAA8B;AAC7B,WAAKc,gBAAL;AACA;AACD;;AAEDb,EAAAA,gBAAgB,CAACc,aAAD,EAAgB;AAC/B,SAAKC,QAAL,CAAc;AAACvB,MAAAA,iBAAiB,EAAEsB;AAApB,KAAd;AACA;;AAEDZ,EAAAA,gBAAgB,CAACY,aAAD,EAAgB;AAC/B,SAAKC,QAAL,CAAc;AAACrB,MAAAA,aAAa,EAAE,IAAhB;AAAsBI,MAAAA,kBAAkB,EAAE;AAA1C,KAAd;AACA,SAAKK,SAAL,CAAe,KAAKd,KAAL,CAAWG,iBAA1B;AACA;;AAEDiB,EAAAA,kBAAkB,CAACb,YAAD,EAAe;AAChC,SAAKmB,QAAL,CAAc;AAACnB,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACA;;AAEDiB,EAAAA,gBAAgB,GAAG;AAClBG,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACtCC,MAAAA,MAAM,EAAC,KAD+B;AAEtCC,MAAAA,OAAO,EAAE;AACR,yBAAiB,YAAYC,YAAY,CAAC,cAAD;AADjC,OAF6B;AAKtCC,MAAAA,IAAI,EAAE;AALgC,KAAlC,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACF,IAAT,EANpB,EAMqCC,IANrC,CAM2CC,QAAD,IAAc;AAAC,WAAKP,QAAL,CAAc;AAAChB,QAAAA,MAAM,EAAEuB,QAAQ,CAAC,IAAD;AAAjB,OAAd;AAAyC,KANlG;AAOA;;AAEDnB,EAAAA,SAAS,CAACoB,UAAD,EAAa;AACrBP,IAAAA,KAAK,CAAC,yCAAuCQ,kBAAkB,CAACD,UAAD,CAAzD,GAAsE,sBAAvE,EAA+F;AACnGN,MAAAA,MAAM,EAAE,KAD2F;AAEnGC,MAAAA,OAAO,EAAE;AACR,yBAAiB,YAAYC,YAAY,CAAC,cAAD;AADjC,OAF0F;AAKnGC,MAAAA,IAAI,EAAE;AAL6F,KAA/F,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACF,IAAT,EANpB,EAMqCC,IANrC,CAM2CC,QAAD,IAAc;AAAC,WAAKf,iBAAL,CAAuBe,QAAvB,EAAiC,CAAjC;AAAqC,KAN9F;AAOA;;AAEDjB,EAAAA,uBAAuB,CAACoB,EAAD,EAAK;AAC3BT,IAAAA,KAAK,CAAC,wCAAsCQ,kBAAkB,CAACC,EAAD,CAAxD,GAA6D,oCAA9D,EAAoG;AACxGR,MAAAA,MAAM,EAAE,KADgG;AAExGC,MAAAA,OAAO,EAAE;AACR,yBAAiB,YAAYC,YAAY,CAAC,cAAD;AADjC,OAF+F;AAKxGC,MAAAA,IAAI,EAAE;AALkG,KAApG,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACF,IAAT,EANpB,EAMqCC,IANrC,CAM2CC,QAAD,IAAc;AAAC,WAAKP,QAAL,CAAc;AAACxB,QAAAA,wBAAwB,EAAE+B,QAAQ,CAAC,SAAD,CAAnC;AACzD3B,QAAAA,SAAS,EAAE,CAAC;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,IAAvB;AAA6B,wBAAc,KAA3C;AAAkD,uBAAa,IAA/D;AAAqE,wBAAc2B,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAAnF;AAAmH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAA/H,SAAD,EACR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,IAAvB;AAA6B,wBAAc,KAA3C;AAAkD,uBAAa,IAA/D;AAAqE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAAnF;AAAmH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAA/H,SADQ,EAER;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAArF;AAAqH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAAjI,SAFQ,EAGR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAArF;AAAqH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAAjI,SAHQ,EAIR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAa,KAA3C;AAAkD,uBAAY,KAA9D;AAAqE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAAnF;AAAmH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAA/H,SAJQ,EAKR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAArF;AAAqH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAAjI,SALQ,EAMR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAArF;AAAqH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAAjI,SANQ,EAOR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAArF;AAAqH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAAjI,SAPQ,EAQR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,IAAvB;AAA6B,wBAAc,KAA3C;AAAkD,uBAAa,KAA/D;AAAsE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAApF;AAAoH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAAhI,SARQ,EASR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAa,KAA3C;AAAkD,uBAAY,KAA9D;AAAqE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,MAAvB,CAAnF;AAAmH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,IAAvB;AAA/H,SATQ,EAUR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,EAAwB,MAAxB,CAArF;AAAsH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,EAAwB,IAAxB;AAAlI,SAVQ,EAWR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,EAAwB,MAAxB,CAArF;AAAsH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,EAAwB,IAAxB;AAAlI,SAXQ,EAYR;AAAC,kBAAQ,KAAT;AAAgB,iBAAO,KAAvB;AAA8B,wBAAc,KAA5C;AAAmD,uBAAa,KAAhE;AAAuE,wBAAcA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,EAAwB,MAAxB,CAArF;AAAsH,sBAAYA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,EAAwB,IAAxB;AAAlI,SAZQ;AAD8C,OAAd;AAa6H,KAnBtL;AAoBA;;AAEDd,EAAAA,YAAY,CAACiB,EAAD,EAAKC,IAAL,EAAW;AACtB,SAAKX,QAAL,CAAc;AAACvB,MAAAA,iBAAiB,EAAEkC;AAApB,KAAd;AACA,SAAKpB,gBAAL,CAAsBmB,EAAtB;AACA;;AAEDrB,EAAAA,kBAAkB,CAACqB,EAAD,EAAK;AACtBT,IAAAA,KAAK,CAAC,wCAAsCQ,kBAAkB,CAACC,EAAD,CAAxD,GAA6D,+BAA9D,EAA+F;AACnGR,MAAAA,MAAM,EAAE,KAD2F;AAEnGC,MAAAA,OAAO,EAAE;AACR,yBAAiB,YAAYC,YAAY,CAAC,cAAD;AADjC,OAF0F;AAKnGC,MAAAA,IAAI,EAAE;AAL6F,KAA/F,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACF,IAAT,EANpB,EAMqCC,IANrC,CAM0CC,QAAQ,IAAI;AAAC,WAAKP,QAAL,CAAc;AAACzB,QAAAA,gBAAgB,EAAEgC,QAAQ,CAAC,QAAD;AAA3B,OAAd;AAAuD,KAN9G;AAOA;;AAEDhB,EAAAA,gBAAgB,CAACmB,EAAD,EAAK;AACpB,SAAKpB,uBAAL,CAA6BoB,EAA7B;AACA,SAAKrB,kBAAL,CAAwBqB,EAAxB;AACA;;AAEDlB,EAAAA,iBAAiB,CAACe,QAAD,EAAWK,CAAX,EAAc;AAC9B,SAAKZ,QAAL,CAAc;AAACa,MAAAA,oBAAoB,EAAEN,QAAQ,CAAC,SAAD,CAAR,CAAoB,OAApB,CAAvB;AAAqD9B,MAAAA,iBAAiB,EAAE8B,QAAQ,CAAC,SAAD,CAAR,CAAoB,OAApB,EAA6BK,CAA7B,EAAgC,MAAhC;AAAxE,KAAd;AACA,SAAKrB,gBAAL,CAAsBgB,QAAQ,CAAC,SAAD,CAAR,CAAoB,OAApB,EAA6BK,CAA7B,EAAgC,IAAhC,CAAtB;AACA;;AAEDjB,EAAAA,UAAU,CAACmB,MAAD,EAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC9B,UAAMC,QAAQ,GAAG,KAAK3C,KAAL,CAAWQ,aAA5B;AACAmC,IAAAA,QAAQ,CAACC,IAAT,CAAc;AAAC,gBAASJ,MAAV;AAAkB,eAAQC,KAA1B;AAAiC,aAAMC;AAAvC,KAAd;AACA,SAAKhB,QAAL,CAAc;AAAClB,MAAAA,aAAa,EAAEmC;AAAhB,KAAd;AACA;;AAEDrB,EAAAA,aAAa,GAAG;AACf,QAAIuB,WAAW,GAAG,KAAK7C,KAAL,CAAWS,kBAA7B;AACAoC,IAAAA,WAAW;AACX,SAAKnB,QAAL,CAAc;AAACvB,MAAAA,iBAAiB,EAAE,KAAKH,KAAL,CAAWuC,oBAAX,CAAgCM,WAAhC,EAA6C,MAA7C,CAApB;AAA0EpC,MAAAA,kBAAkB,EAAEoC;AAA9F,KAAd;AAA0H;AAC1H,SAAK5B,gBAAL,CAAsB,KAAKjB,KAAL,CAAWuC,oBAAX,CAAgCM,WAAhC,EAA6C,IAA7C,CAAtB;AACA;;AAEDC,EAAAA,eAAe,CAACC,CAAD,EAAI;AAClB,WACI,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWM,SAAX,CAAqByC,CAArB,CADR;AAEJ,MAAA,YAAY,EAAE,KAAK5B,YAFf;AAGJ,MAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWK,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOC;;AAEFT,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAE,KAAKI,KAAL,CAAWO,YAAvC;AACA,MAAA,kBAAkB,EAAE,KAAKa,kBADzB;AAEA,MAAA,aAAa,EAAE,KAAKpB,KAAL,CAAWQ,aAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKsC,eAAL,CAAqB,CAArB,CADD,EAEC,KAAKA,eAAL,CAAqB,CAArB,CAFD,EAGC,KAAKA,eAAL,CAAqB,CAArB,CAHD,EAIC,KAAKA,eAAL,CAAqB,CAArB,CAJD,EAKC,KAAKA,eAAL,CAAqB,CAArB,CALD,EAMC,KAAKA,eAAL,CAAqB,CAArB,CAND,EAOC,KAAKA,eAAL,CAAqB,CAArB,CAPD,EAQC,KAAKA,eAAL,CAAqB,CAArB,CARD,EASC,KAAKA,eAAL,CAAqB,CAArB,CATD,EAUC,KAAKA,eAAL,CAAqB,CAArB,CAVD,EAWC,KAAKA,eAAL,CAAqB,EAArB,CAXD,EAYC,KAAKA,eAAL,CAAqB,EAArB,CAZD,EAaC,KAAKA,eAAL,CAAqB,EAArB,CAbD,CALA,EAoBA,oBAAC,cAAD;AAAgB,MAAA,iBAAiB,EAAE,KAAK9C,KAAL,CAAWG,iBAA9C;AACA,MAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWC,gBAD7B;AAEA,MAAA,gBAAgB,EAAE,KAAKU,gBAFvB;AAGA,MAAA,gBAAgB,EAAE,KAAKE,gBAHvB;AAIA,MAAA,aAAa,EAAE,KAAKb,KAAL,CAAWG,iBAJ1B;AAKA,MAAA,aAAa,EAAE,KAAKH,KAAL,CAAWK,aAL1B;AAMA,MAAA,UAAU,EAAE,KAAKgB,UANjB;AAOA,MAAA,aAAa,EAAE,KAAKrB,KAAL,CAAWQ,aAP1B;AAQA,MAAA,aAAa,EAAG,KAAKc,aARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBA,CADD;AAiCA;;AAxL4C;;AA2L9C,MAAM0B,SAAN,SAAwBxD,KAAK,CAACG,SAA9B,CAAwC;AACvCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKkD,WAAL,GAAmB,KAAKA,WAAL,CAAiBrC,IAAjB,CAAsB,IAAtB,CAAnB;AACA;;AAEDqC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,SAAKnD,KAAL,CAAWoB,YAAX,CAAwB,KAAKpB,KAAL,CAAWoD,IAAX,CAAgB,UAAhB,CAAxB,EAAqD,KAAKpD,KAAL,CAAWoD,IAAX,CAAgB,YAAhB,CAArD;AACA;;AAEDvD,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAG,KAAKG,KAAL,CAAWM,aAAX,GAA2B,EAA3B,GAAgC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,KAAK4C,WAAtB;AAAmC,MAAA,SAAS,EAAC,mBAA7C;AAAiE,MAAA,QAAQ,EAAE,KAAKlD,KAAL,CAAWoD,IAAX,CAAgB,UAAhB,CAA3E;AAAwG,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAE,KAAKrD,KAAL,CAAWoD,IAAX,CAAgB,MAAhB,CAAP;AAAgCE,QAAAA,GAAG,EAAE,KAAKtD,KAAL,CAAWoD,IAAX,CAAgB,KAAhB;AAArC,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8K,KAAKpD,KAAL,CAAWoD,IAAX,CAAgB,YAAhB,CAA9K,CADA,EAEA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC;AAAM,MAAA,EAAE,EAAE,KAAKpD,KAAL,CAAWoD,IAAX,CAAgB,YAAhB,CAAV;AAAyC,MAAA,EAAE,EAAC,KAA5C;AAAkD,MAAA,EAAE,EAAE,KAAKpD,KAAL,CAAWoD,IAAX,CAAgB,WAAhB,CAAtD;AAAoF,MAAA,EAAE,EAAC,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,CAFA,CADD;AAMA;;AAjBsC;;AAoBxC,MAAMG,cAAN,SAA6B9D,KAAK,CAACG,SAAnC,CAA6C;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKwD,YAAL,GAAoB,KAAKA,YAAL,CAAkB3C,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK4C,YAAL,GAAoB,KAAKA,YAAL,CAAkB5C,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK6C,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB7C,IAAvB,CAA4B,IAA5B,CAAzB;AACC;;AAED2C,EAAAA,YAAY,CAACL,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACQ,cAAN;AACH,SAAK3D,KAAL,CAAWc,gBAAX,CAA4B,KAAKd,KAAL,CAAWI,iBAAvC;AACE;;AAEDqD,EAAAA,YAAY,CAACN,KAAD,EAAQ;AAClB,SAAKnD,KAAL,CAAWY,gBAAX,CAA4BuC,KAAK,CAACS,MAAN,CAAaC,KAAzC;AACD;;AAEDH,EAAAA,iBAAiB,CAACP,KAAD,EAAQ;AACxB,SAAKnD,KAAL,CAAWuB,aAAX;AACA;;AAEF1B,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAE,KAAK2D,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,EAAE,EAAC,iBAAV;AACA,MAAA,KAAK,EAAE,KAAKxD,KAAL,CAAWI,iBADlB;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,QAAQ,EAAE,KAAKqD,YAHf;AAIA,MAAA,WAAW,EAAC,mBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC;AAAK,MAAA,EAAE,EAAC,kBAAR;AAA2B,MAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWM,aAAX,GAA2B,EAA3B,GAAgC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,cAAD;AACA,MAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWE,gBAD7B;AAEA,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWsB,UAFvB;AAGA,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWI,iBAHnB;AAIA,MAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWS,aAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAND,CADD,EAgBC;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,KAAK+C,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBD,EAiBC;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,KAAKE,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBD,CADD;AAqBA;;AA3C2C;;AA8C7C,MAAMI,cAAN,SAA6BrE,KAAK,CAACG,SAAnC,CAA6C;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKkD,WAAL,GAAmB,KAAKA,WAAL,CAAiBrC,IAAjB,CAAsB,IAAtB,CAAnB;AACA;;AAEDqC,EAAAA,WAAW,CAACT,MAAD,EAASsB,KAAT,EAAgBpB,GAAhB,EAAqB;AAC/B,SAAK3C,KAAL,CAAWsB,UAAX,CAAsBmB,MAAtB,EAA8BsB,KAA9B,EAAqCpB,GAArC;AACA;;AAED9C,EAAAA,MAAM,GAAI;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,EAAE,EAAC,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKG,KAAL,CAAWE,gBAAX,CAA4B8D,GAA5B,CAAgC9D,gBAAgB,IAAI;AAAI,MAAA,OAAO,EAAE,MAAK,KAAKgD,WAAL,CAAiB,KAAKlD,KAAL,CAAWyC,MAA5B,EAAoCvC,gBAAgB,CAAC,MAAD,CAApD,EAA8DA,gBAAgB,CAAC,KAAD,CAA9E,CAAlB;AAA0G,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWyC,MAA7H;AAAqI,MAAA,GAAG,EAAEvC,gBAAgB,CAAC,KAAD,CAA1J;AAAmK,MAAA,GAAG,EAAEA,gBAAgB,CAAC,IAAD,CAAxL;AAAgM,MAAA,SAAS,EAAC,yBAA1M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoO;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CA,gBAAgB,CAAC,MAAD,CAA9D,CAApO,EAAgT;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhT,CAApD,CADF,CALD,CADA,CADF;AAaA;;AAxB2C;;AA2B7C,MAAM+D,YAAN,SAA2BxE,KAAK,CAACG,SAAjC,CAA2C;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKwD,YAAL,GAAoB,KAAKA,YAAL,CAAkB3C,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK4C,YAAL,GAAoB,KAAKA,YAAL,CAAkB5C,IAAlB,CAAuB,IAAvB,CAApB;AACC;;AAED2C,EAAAA,YAAY,CAACL,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACQ,cAAN;AACHO,IAAAA,KAAK,CAAC,cAAD,CAAL;AACE;;AAEDT,EAAAA,YAAY,CAACN,KAAD,EAAQ;AAClB,SAAKnD,KAAL,CAAWqB,kBAAX,CAA8B8B,KAAK,CAACS,MAAN,CAAaC,KAA3C;AACD;;AAEFhE,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,EAAE,EAAC,mBAAV;AACA,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWQ,YADlB;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,QAAQ,EAAE,KAAKiD,YAHf;AAIA,MAAA,WAAW,EAAC,0BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,gBAAD;AACA,MAAA,aAAa,EAAE,KAAKzD,KAAL,CAAWS,aAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD,EAWC;AAAQ,MAAA,OAAO,EAAE,KAAK+C,YAAtB;AAAoC,MAAA,EAAE,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXD,CADD;AAeA;;AAhCyC;;AAmC3C,MAAMW,gBAAN,SAA+B1E,KAAK,CAACG,SAArC,CAA+C;AAC9CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKkD,WAAL,GAAmB,KAAKA,WAAL,CAAiBrC,IAAjB,CAAsB,IAAtB,CAAnB;AACA;;AAEDqC,EAAAA,WAAW,GAAG;AACbgB,IAAAA,KAAK,CAAC,cAAD,CAAL;AACA;;AAEDrE,EAAAA,MAAM,GAAI;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,EAAE,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKG,KAAL,CAAWS,aAAX,CAAyBuD,GAAzB,CAA6BvD,aAAa,IAAI;AAAI,MAAA,OAAO,EAAE,MAAK,KAAKyC,WAAL,EAAlB;AAAsC,MAAA,MAAM,EAAEzC,aAAa,CAAC,QAAD,CAA3D;AAAuE,MAAA,GAAG,EAAEA,aAAa,CAAC,KAAD,CAAzF;AAAmG,MAAA,SAAS,EAAC,uBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CA,aAAa,CAAC,QAAD,CAAb,GAAwB,IAAxB,GAA6BA,aAAa,CAAC,OAAD,CAAtF,CAArI,EAA0O;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA1O,CAA9C,CADF,CALD,CADA,CADF;AAaA;;AAxB6C;;AA2B/C,MAAM2D,QAAQ,GAAG,oBAAjB;;AACA,MAAMC,YAAN,SAA2B5E,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAKzCsD,WALyC,GAK3B,MAAM;AAClB,YAAMoB,SAAS,GAAG,kCAAlB;AACA,YAAMC,YAAY,GAAG,uBAArB,CAFkB,CAGtB;;AACI,YAAMtE,KAAK,GAAGuE,oBAAoB,CAAC,EAAD,CAAlC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqBN,QAArB,EAA+BnE,KAA/B;AACA,YAAM0E,GAAG,kFAA2EvC,kBAAkB,CAACkC,SAAD,CAA7F,2BAAyHlC,kBAAkB,CAACmC,YAAD,CAA3I,oBAAmKnC,kBAAkB,CAACnC,KAAD,CAArL,CAAT;AACA2E,MAAAA,MAAM,CAACC,QAAP,GAAkBF,GAAlB;AACD,KAbwC;AAAA;;AACzCnD,EAAAA,iBAAiB,GAAG;AAClBiD,IAAAA,YAAY,CAACK,UAAb,CAAwBV,QAAxB;AACD;;AAYDvE,EAAAA,MAAM,GAAG;AACP,WAAO;AAAQ,MAAA,OAAO,EAAE,KAAKqD,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAjBwC;;AAkB1C;;AAED,SAASsB,oBAAT,CAA8BO,MAA9B,EAAsC;AACpC,MAAIC,IAAI,GAAG,EAAX;AACA,QAAMC,QAAQ,GACZ,gEADF;;AAGA,SAAOD,IAAI,CAACD,MAAL,IAAeA,MAAtB,EAA8B;AAC5BC,IAAAA,IAAI,IAAIC,QAAQ,CAACC,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACD;;AAED,SAAOC,IAAP;AACD;;AAAA;;AAED,SAASjD,YAAT,CAAsBuD,KAAtB,EAA6B;AAC5B,MAAIC,IAAI,GAAGX,MAAM,CAACC,QAAP,CAAgBU,IAAhB,CAAqBC,MAArB,CAA4B,CAA5B,CAAX;AAEA,MAAIC,MAAM,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuB,UAAUF,MAAV,EAAkBG,IAAlB,EAAwB;AAC3D,QAAIC,KAAK,GAAGD,IAAI,CAACF,KAAL,CAAW,GAAX,CAAZ;AACAD,IAAAA,MAAM,CAACI,KAAK,CAAC,CAAD,CAAN,CAAN,GAAmBA,KAAK,CAAC,CAAD,CAAxB;AACA,WAAOJ,MAAP;AACA,GAJY,EAIV,EAJU,CAAb;AAKA,SAAOA,MAAM,CAACH,KAAD,CAAb;AACA;;AAAA;;AAED,SAASQ,iBAAT,CAA2BC,QAA3B,EAAqCC,QAArC,EAA+C;AAC9C,MAAIC,WAAW,GAAGC,QAAQ,CAACH,QAAQ,CAACI,OAAT,CAAiB,GAAjB,EAAqB,EAArB,CAAD,CAA1B;AACA,MAAIC,WAAW,GAAGF,QAAQ,CAACF,QAAQ,CAACG,OAAT,CAAiB,GAAjB,EAAqB,EAArB,CAAD,CAA1B;AACA,MAAIE,eAAe,GAAGJ,WAAW,GAACG,WAAlC;AACA,SAAOC,eAAe,GAAC,GAAvB;AACA;;AAED3G,QAAQ,CAACG,MAAT,CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEyG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass WholeSite extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div id=\"spotifyLogin\">\r\n\t\t\t\t\t<SpotifyLogin />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"playlistBuilder\">\r\n\t\t\t\t\t<PlaylistBuilder />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t\t//<SpotifyLogin />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PlaylistBuilder extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {mainArtistTracks:[],\r\n\t\t\t\t\tmainArtistSimilarArtists:[],\r\n\t\t\t\t\tcurrentMainArtist:\"\",\r\n\t\t\t\t\tmainArtistData:{},\r\n\t\t\t\t\tspiderLegShow:false,\r\n\t\t\t\t\tspiderLeg:[{\"left\": \"55%\", \"top\": \"6%\", \"leftAnchor\": \"63%\", \"topAnchor\": \"8%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"30%\", \"top\": \"5%\", \"leftAnchor\":\"38%\", \"topAnchor\":\"7%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"60%\", \"top\": \"12%\", \"leftAnchor\":\"68%\", \"topAnchor\":\"14%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"70%\", \"top\": \"30%\", \"leftAnchor\":\"78%\", \"topAnchor\":\"32%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"81%\", \"top\": \"40%\", \"leftAnchor\":\"89%\", \"topAnchor\":\"42%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"27%\", \"top\": \"30%\", \"leftAnchor\":\"35%\", \"topAnchor\":\"32%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"40%\", \"top\": \"20%\", \"leftAnchor\":\"48%\", \"topAnchor\":\"22%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"50%\", \"top\": \"30%\", \"leftAnchor\":\"58%\", \"topAnchor\":\"32%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"78%\", \"top\": \"8%\", \"leftAnchor\":\"86%\", \"topAnchor\":\"10%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"29%\", \"top\": \"60%\", \"leftAnchor\":\"37%\", \"topAnchor\":\"62%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"82%\", \"top\": \"68%\", \"leftAnchor\": \"90%\", \"topAnchor\": \"70%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"26%\", \"top\": \"90%\", \"leftAnchor\": \"34%\", \"topAnchor\": \"92%\", \"artistName\": \"\", \"artistID\": 0},\r\n\t\t\t\t\t\t\t\t{\"left\": \"80%\", \"top\": \"76%\", \"leftAnchor\":\"88%\", \"topAnchor\":\"78%\", \"artistName\": \"\", \"artistID\": 0}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\tplaylistName:\"\",\r\n\t\t\t\t\tplaylistSongs:[],\r\n\t\t\t\t\tcurrentSearchIndex:0,\r\n\t\t\t\t\tuserID:\"\"\r\n\t\t\t\t\t};\r\n\t\tthis.mainArtistChange = this.mainArtistChange.bind(this);\r\n\t\tthis.mainArtistSubmit = this.mainArtistSubmit.bind(this);\r\n\t\tthis.searchAPI = this.searchAPI.bind(this);\r\n\t\tthis.artistTopTracksAPI = this.artistTopTracksAPI.bind(this);\r\n\t\tthis.artistSimilarArtistsAPI = this.artistSimilarArtistsAPI.bind(this);\r\n\t\tthis.artistGetAllData = this.artistGetAllData.bind(this);\r\n\t\tthis.processArtistData = this.processArtistData.bind(this);\r\n\t\tthis.setNewArtist = this.setNewArtist.bind(this);\r\n\t\tthis.playlistNameChange = this.playlistNameChange.bind(this);\r\n\t\tthis.submitSong = this.submitSong.bind(this);\r\n\t\tthis.tryNextArtist = this.tryNextArtist.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tif (this.state.userID === \"\") {\r\n\t\t\tthis.getCurrentUserID();\r\n\t\t}\r\n\t}\r\n\t\r\n\tmainArtistChange(mainArtistVal) {\r\n\t\tthis.setState({currentMainArtist: mainArtistVal});\r\n\t}\r\n\t\r\n\tmainArtistSubmit(mainArtistVal) {\r\n\t\tthis.setState({spiderLegShow: true, currentSearchIndex: 0});\r\n\t\tthis.searchAPI(this.state.currentMainArtist);\r\n\t}\r\n\t\r\n\tplaylistNameChange(playlistName) {\r\n\t\tthis.setState({playlistName: playlistName});\r\n\t}\r\n\t\r\n\tgetCurrentUserID() {\r\n\t\tfetch(\"https://api.spotify.com/v1/me\", {\r\n\t\t\tmethod:'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then((response) => {this.setState({userID: response[\"id\"]});});\r\n\t}\r\n\t\r\n\tsearchAPI(searchTerm) {\r\n\t\tfetch(\"https://api.spotify.com/v1/search?q=\"+encodeURIComponent(searchTerm)+\"&type=artist&limit=5\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then((response) => {this.processArtistData(response, 0);});\r\n\t}\r\n\t\r\n\tartistSimilarArtistsAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/related-artists?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then((response) => {this.setState({mainArtistSimilarArtists: response[\"artists\"],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tspiderLeg: [{\"left\": \"55%\", \"top\": \"6%\", \"leftAnchor\": \"63%\", \"topAnchor\": \"8%\", \"artistName\": response[\"artists\"][0][\"name\"], \"artistID\": response[\"artists\"][0][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"30%\", \"top\": \"5%\", \"leftAnchor\": \"38%\", \"topAnchor\": \"7%\", \"artistName\": response[\"artists\"][1][\"name\"], \"artistID\": response[\"artists\"][1][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"60%\", \"top\": \"12%\", \"leftAnchor\": \"68%\", \"topAnchor\": \"14%\", \"artistName\": response[\"artists\"][2][\"name\"], \"artistID\": response[\"artists\"][2][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"70%\", \"top\": \"30%\", \"leftAnchor\": \"78%\", \"topAnchor\": \"32%\", \"artistName\": response[\"artists\"][3][\"name\"], \"artistID\": response[\"artists\"][3][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"81%\", \"top\": \"40%\", \"leftAnchor\":\"89%\", \"topAnchor\":\"42%\", \"artistName\": response[\"artists\"][4][\"name\"], \"artistID\": response[\"artists\"][4][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"27%\", \"top\": \"30%\", \"leftAnchor\": \"35%\", \"topAnchor\": \"32%\", \"artistName\": response[\"artists\"][5][\"name\"], \"artistID\": response[\"artists\"][5][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"40%\", \"top\": \"20%\", \"leftAnchor\": \"48%\", \"topAnchor\": \"22%\", \"artistName\": response[\"artists\"][6][\"name\"], \"artistID\": response[\"artists\"][6][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"50%\", \"top\": \"30%\", \"leftAnchor\": \"58%\", \"topAnchor\": \"32%\", \"artistName\": response[\"artists\"][7][\"name\"], \"artistID\": response[\"artists\"][7][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"78%\", \"top\": \"8%\", \"leftAnchor\": \"86%\", \"topAnchor\": \"10%\", \"artistName\": response[\"artists\"][8][\"name\"], \"artistID\": response[\"artists\"][8][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"29%\", \"top\": \"60%\", \"leftAnchor\":\"37%\", \"topAnchor\":\"62%\", \"artistName\": response[\"artists\"][9][\"name\"], \"artistID\": response[\"artists\"][9][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"82%\", \"top\": \"68%\", \"leftAnchor\": \"90%\", \"topAnchor\": \"70%\", \"artistName\": response[\"artists\"][10][\"name\"], \"artistID\": response[\"artists\"][10][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"26%\", \"top\": \"90%\", \"leftAnchor\": \"34%\", \"topAnchor\": \"92%\", \"artistName\": response[\"artists\"][11][\"name\"], \"artistID\": response[\"artists\"][11][\"id\"]},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"left\": \"80%\", \"top\": \"76%\", \"leftAnchor\": \"88%\", \"topAnchor\": \"78%\", \"artistName\": response[\"artists\"][12][\"name\"], \"artistID\": response[\"artists\"][12][\"id\"]}]});});\r\n\t}\r\n\t\r\n\tsetNewArtist(id, name) {\r\n\t\tthis.setState({currentMainArtist: name});\r\n\t\tthis.artistGetAllData(id);\r\n\t}\r\n\t\r\n\tartistTopTracksAPI(id) {\r\n\t\tfetch(\"https://api.spotify.com/v1/artists/\"+encodeURIComponent(id)+\"/top-tracks?market=from_token\", {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + getHashParam(\"access_token\")\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t}).then(response => response.json()).then(response => {this.setState({mainArtistTracks: response[\"tracks\"]});});\r\n\t}\r\n\t\r\n\tartistGetAllData(id) {\r\n\t\tthis.artistSimilarArtistsAPI(id);\r\n\t\tthis.artistTopTracksAPI(id);\r\n\t}\r\n\t\r\n\tprocessArtistData(response, n) {\r\n\t\tthis.setState({mainArtistSearchData: response[\"artists\"][\"items\"], currentMainArtist: response[\"artists\"][\"items\"][n][\"name\"]});\r\n\t\tthis.artistGetAllData(response[\"artists\"][\"items\"][n][\"id\"]);\r\n\t}\r\n\t\r\n\tsubmitSong(artist, title, uri) {\r\n\t\tconst newArray = this.state.playlistSongs;\r\n\t\tnewArray.push({\"artist\":artist, \"title\":title, \"uri\":uri});\r\n\t\tthis.setState({playlistSongs: newArray});\r\n\t}\r\n\t\r\n\ttryNextArtist() {\r\n\t\tvar searchIndex = this.state.currentSearchIndex;\r\n\t\tsearchIndex++;\r\n\t\tthis.setState({currentMainArtist: this.state.mainArtistSearchData[searchIndex][\"name\"], currentSearchIndex: searchIndex});;\r\n\t\tthis.artistGetAllData(this.state.mainArtistSearchData[searchIndex][\"id\"]);\r\n\t}\r\n\t\r\n\trenderSpiderLeg(i) {\r\n\t\treturn (\r\n      <SpiderLeg\r\n        info={this.state.spiderLeg[i]}\r\n\t\tsetNewArtist={this.setNewArtist}\r\n\t\tspiderLegShow={this.state.spiderLegShow}\r\n      />\r\n    );\r\n  }\r\n\t\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<PlaylistArea playlistName={this.state.playlistName}\r\n\t\t\tplaylistNameChange={this.playlistNameChange}\r\n\t\t\tplaylistSongs={this.state.playlistSongs}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t{this.renderSpiderLeg(0)}\r\n\t\t\t{this.renderSpiderLeg(1)}\r\n\t\t\t{this.renderSpiderLeg(2)}\r\n\t\t\t{this.renderSpiderLeg(3)}\r\n\t\t\t{this.renderSpiderLeg(4)}\r\n\t\t\t{this.renderSpiderLeg(5)}\r\n\t\t\t{this.renderSpiderLeg(6)}\r\n\t\t\t{this.renderSpiderLeg(7)}\r\n\t\t\t{this.renderSpiderLeg(8)}\r\n\t\t\t{this.renderSpiderLeg(9)}\r\n\t\t\t{this.renderSpiderLeg(10)}\r\n\t\t\t{this.renderSpiderLeg(11)}\r\n\t\t\t{this.renderSpiderLeg(12)}\r\n\t\t\t</div>\r\n\t\t\t<MainArtistForm currentMainArtist={this.state.currentMainArtist} \r\n\t\t\tmainArtistTracks={this.state.mainArtistTracks}\r\n\t\t\tmainArtistChange={this.mainArtistChange}\r\n\t\t\tmainArtistSubmit={this.mainArtistSubmit}\r\n\t\t\tcurrentSearch={this.state.currentMainArtist}\r\n\t\t\tspiderLegShow={this.state.spiderLegShow}\r\n\t\t\tsubmitSong={this.submitSong}\r\n\t\t\tplaylistSongs={this.state.playlistSongs}\r\n\t\t\ttryNextArtist ={this.tryNextArtist}\r\n\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass SpiderLeg extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\t\r\n\thandleClick(event) {\r\n\t\tthis.props.setNewArtist(this.props.info[\"artistID\"], this.props.info[\"artistName\"]);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className= {this.props.spiderLegShow ? \"\" : \"hidden\"}>\r\n\t\t\t<button onClick={this.handleClick} className=\"otherArtistButton\" artistid={this.props.info[\"artistID\"]} style={{left: this.props.info[\"left\"], top: this.props.info[\"top\"]}}>{this.props.info[\"artistName\"]}</button>\r\n\t\t\t<svg className=\"spiderLegConnector\"><line x1={this.props.info[\"leftAnchor\"]} x2=\"60%\" y1={this.props.info[\"topAnchor\"]} y2=\"46%\"/></svg>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass MainArtistForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleWrongArtist = this.handleWrongArtist.bind(this);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\tthis.props.mainArtistSubmit(this.props.currentMainArtist);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.props.mainArtistChange(event.target.value);\r\n  }\r\n  \r\n  handleWrongArtist(event) {\r\n\t  this.props.tryNextArtist();\r\n  }\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"mainArtist\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<input id=\"mainArtistInput\"\r\n\t\t\t\t\tvalue={this.props.currentMainArtist} \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tplaceholder=\"Enter Artist Here\"/>\r\n\t\t\t\t\t<div id=\"mainArtistTracks\" className={this.props.spiderLegShow ? \"\" : \"hidden\"}>\r\n\t\t\t\t\t\t<ArtistSongList \r\n\t\t\t\t\t\tmainArtistTracks={this.props.mainArtistTracks} \r\n\t\t\t\t\t\tsubmitSong={this.props.submitSong}\r\n\t\t\t\t\t\tartist={this.props.currentMainArtist}\r\n\t\t\t\t\t\tplaylistSongs={this.props.playlistSongs}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<button className=\"mainArtistButton\" onClick={this.handleSubmit}>Search</button>\r\n\t\t\t\t<button className=\"mainArtistButton\" onClick={this.handleWrongArtist}>Wrong Artist</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass ArtistSongList extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\t\r\n\thandleClick(artist, track, uri) {\r\n\t\tthis.props.submitSong(artist, track, uri);\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t <div>\r\n\t\t\t\t<table id='mainArtistTrackTable'>\r\n\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t<col className=\"mainArtistSongTitleColumn\" />\r\n\t\t\t\t\t<col className=\"mainArtistButtonColumn\" />\r\n\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.props.mainArtistTracks.map(mainArtistTracks => <tr onClick={()=> this.handleClick(this.props.artist, mainArtistTracks[\"name\"], mainArtistTracks[\"uri\"])} artist={this.props.artist} uri={mainArtistTracks[\"uri\"]} key={mainArtistTracks[\"id\"]} className=\"mainArtistTrackTableRow\"><td className=\"mainArtistTrackTableCellName\">{mainArtistTracks[\"name\"]}</td><td className=\"mainArtistPlusColumn\">+</td></tr>)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass PlaylistArea extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\talert(\"Not Done Yet\");\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.props.playlistNameChange(event.target.value);\r\n  }\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"playListArea\">\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<input id=\"playlistNameInput\"\r\n\t\t\t\t\tvalue={this.props.playlistName} \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tplaceholder=\"Enter Playlist Name Here\"/>\r\n\t\t\t\t\t<PlaylistSongList \r\n\t\t\t\t\tplaylistSongs={this.props.playlistSongs}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<button onClick={this.handleSubmit} id=\"playlistSubmit\">Create Playlist</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass PlaylistSongList extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\t\r\n\thandleClick() {\r\n\t\talert(\"Not Done Yet\");\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t <div>\r\n\t\t\t\t<table id='playlistTrackTable'>\r\n\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t<col className=\"playlistSongTitleColumn\" />\r\n\t\t\t\t\t<col className=\"playlistMinusColumn\" />\r\n\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.props.playlistSongs.map(playlistSongs => <tr onClick={()=> this.handleClick()} artist={playlistSongs[\"artist\"]} uri={playlistSongs[\"uri\"]}  className=\"playlistTrackTableRow\"><td className=\"playlistTrackTableCellName\">{playlistSongs[\"artist\"]+\": \"+playlistSongs[\"title\"]}</td><td className=\"playlistMinus\">-</td></tr>)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst stateKey = \"spotify_auth_state\";\r\nclass SpotifyLogin extends React.Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(stateKey);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const client_id = \"8f8783f95ca7449fbb4bb5ac6f84840b\";\r\n    const redirect_uri = \"http://localhost:3000\";\r\n//    const scope = \"user-read-private user-read-email\";\r\n    const state = generateRandomString(16);\r\n    localStorage.setItem(stateKey, state);\r\n    const url = `https://accounts.spotify.com/authorize?response_type=token&client_id=${encodeURIComponent(client_id)}&redirect_uri=${encodeURIComponent(redirect_uri)}&state=${encodeURIComponent(state)}`;\r\n    window.location = url;\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.handleClick}>Log in</button>;\r\n  }\r\n};\r\n\r\nfunction generateRandomString(length) {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  while (text.length <= length) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nfunction getHashParam(param) {\r\n\tvar hash = window.location.hash.substr(1);\r\n\r\n\tvar result = hash.split('&').reduce(function (result, item) {\r\n\t\tvar parts = item.split('=');\r\n\t\tresult[parts[0]] = parts[1];\r\n\t\treturn result;\r\n\t}, {});\r\n\treturn result[param]\r\n};\r\n\r\nfunction addStringPercents(percent1, percent2) {\r\n\tvar percent1Num = parseInt(percent1.replace(\"%\",\"\"));\r\n\tvar percent2Num = parseInt(percent2.replace(\"%\",\"\"));\r\n\tvar totalPercentNum = percent1Num+percent2Num;\r\n\treturn totalPercentNum+\"%\"\r\n}\r\n\r\nReactDOM.render(\r\n  <WholeSite />,\r\n  document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}